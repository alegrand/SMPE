# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+TITLE:     Data Management: Tips and Tools
#+Author: Arnaud Legrand\medskip\newline\logoInstitutions
#+DATE:  \vspace{3cm}\JDEVlogo SMPE lecture\newline October 2022\newline\begin{overlayarea}{1.05\linewidth}{0cm}\vspace{-3.2cm}\hfill{\mylogo}\end{overlayarea}\vspace{-1.0cm}
#+LANGUAGE: en
#+STARTUP: beamer indent inlineimages logdrawer
#+TAGS: noexport(n)

#+PROPERTY: header-args  :session :eval never-export :exports both
#+DRAWERS: latex_headers

:latex_headers:
#+LaTeX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [10pt,presentation,xcolor={usenames,dvipsnames,svgnames,table}]
# # aspectratio=169
#+OPTIONS:   H:2 num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+LATEX_COMPILER: lualatex -shell-escape
#+LATEX_HEADER: \usedescriptionitemofwidthas{bl}
#+LATEX_HEADER: \usepackage[T1]{fontenc}
#+LATEX_HEADER: \usepackage[utf8]{inputenc}
#+LATEX_HEADER: \usepackage{figlatex}
#+LATEX_HEADER: \usepackage[french]{babel}
#+LATEX_HEADER: %\usepackage{DejaVuSansMono}
#+LATEX_HEADER: \usepackage{ifthen,amsmath,amstext,gensymb,amssymb}
#+LATEX_HEADER: \usepackage{relsize}
#+LATEX_HEADER: \usepackage{boxedminipage,xspace,multicol}
#+LATEX_HEADER: %%%%%%%%% Begin of Beamer Layout %%%%%%%%%%%%%
#+LATEX_HEADER: \ProcessOptionsBeamer
#+LATEX_HEADER: \usetheme[numbering=fraction,titleformat=smallcaps,progressbar=frametitle]{metropolis}
#+LATEX_HEADER: \usepackage{fontawesome}
#+LATEX_HEADER: \usecolortheme[named=BrickRed]{structure}
#+LATEX_HEADER: %%%%%%%%% End of Beamer Layout %%%%%%%%%%%%%
#+LATEX_HEADER: \usepackage{array}
#+LATEX_HEADER: \newcolumntype{L}[1]{>{\raggedright\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}
#+LATEX_HEADER: \newcolumntype{C}[1]{>{\centering\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}
#+LATEX_HEADER: \newcolumntype{R}[1]{>{\raggedleft\let\newline\\\arraybackslash\hspace{0pt}}m{#1}}

#+LATEX_HEADER: \usepackage{verbments}
#+LATEX_HEADER: \usepackage{xcolor}
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER: \usepackage{url} \urlstyle{sf}
#+LATEX_HEADER: \let\alert=\structure % to make sure the org * * works of tools
#+LATEX_HEADER: %\let\tmptableofcontents=\tableofcontents
#+LATEX_HEADER: %\def\tableofcontents{}
#+LATEX_HEADER: \let\hrefold=\href
#+LATEX_HEADER: \usepackage{ifluatex}
#+LATEX_HEADER: \ifpdftex
#+LATEX_HEADER:   \usepackage[normalem]{ulem}\usepackage{soul}
#+LATEX_HEADER:   % \usepackage{color}
#+LATEX_HEADER:   \definecolor{lightorange}{rgb}{1,.9,.7}
#+LATEX_HEADER:   \sethlcolor{lightorange}
#+LATEX_HEADER:   \definecolor{lightgreen}{rgb}{.7,.9,.7}
#+LATEX_HEADER:   \makeatother
#+LATEX_HEADER:      \renewcommand{\href}[2]{\hrefold{#1}{\SoulColor{lightorange}\hl{#2}}}
#+LATEX_HEADER:      % \renewcommand{\uline}[1]{\SoulColor{lightorange}\hl{#1}}
#+LATEX_HEADER:      % \renewcommand{\emph}[1]{\SoulColor{lightorange}\hl{#1}}
#+LATEX_HEADER:   \makeatletter
#+LATEX_HEADER:   \newcommand\SoulColor[1]{%
#+LATEX_HEADER:   \sethlcolor{#1}%
#+LATEX_HEADER:   \let\set@color\beamerorig@set@color%
#+LATEX_HEADER:   \let\reset@color\beamerorig@reset@color}
#+LATEX_HEADER: \else
#+LATEX_HEADER:    \usepackage[soul]{lua-ul}
#+LATEX_HEADER:    \usepackage{tcolorbox}
#+LATEX_HEADER:      \renewcommand{\href}[2]{\hrefold{#1}{\begin{tcolorbox}[colback=orange!30!white,size=minimal,hbox,on line]{#2}\end{tcolorbox}}}
#+LATEX_HEADER:      \let\textttold=\texttt
#+LATEX_HEADER:      \renewcommand\texttt[1]{\begin{tcolorbox}[colback=green!30!white,size=minimal,hbox,on line]{\smaller\textttold{#1}}\end{tcolorbox}}
#+LATEX_HEADER: \fi
#+LATEX_HEADER: % 
#+LATEX_HEADER: % \renewcommand\alert[1]{\SoulColor{lightgreen}\hl{#1}}
#+LATEX_HEADER: % \AtBeginSection{\begin{frame}{Outline}\tableofcontents\end{frame}}
#+LATEX_HEADER: \usepackage[export]{adjustbox}
#+LATEX_HEADER: \graphicspath{{fig/}}
#+LATEX_HEADER: \usepackage{tikzsymbols}
#+LATEX_HEADER: \def\smiley{\Smiley[1][green!80!white]}
#+LATEX_HEADER: \def\frowny{\Sadey[1][red!80!white]}
#+LATEX_HEADER: \def\winkey{\Winkey[1][yellow]}
#+LATEX_HEADER: \def\JDEVlogo{}%\includegraphics[height=1cm]{./images/jdevLogo.pdf}}
#+LATEX_HEADER: \def\mylogo{\includegraphics[height=2.5cm]{./images/in_science_we_trust.jpg}}
#+LATEX_HEADER: \def\logoInstitutions{\includegraphics[height=.7cm]{./images/Logo-UGA2020.pdf}\quad\includegraphics[height=.7cm]{./images/Logo-CNRS.pdf}\quad\includegraphics[height=.7cm]{./images/Logo-Inria.pdf}\includegraphics[height=.7cm]{./images/Logo-Lig2.pdf}\vspace{-.7cm}}
#+LATEX_HEADER: %\usepackage{pgf}  
#+LATEX_HEADER: %\logo{\pgfputat{\pgfxy(-2,6.5)}{\pgfbox[center,base]{\includegraphics[height=1cm]{./images/jdevLogo.pdf}}}}

#+LaTeX: \newsavebox{\temp}
#+LaTeX: \newsavebox{\tempcoderefinery}
#+LaTeX: \newsavebox{\temprrtools}
#+LaTeX: \newsavebox{\tempsnakemake}
#+LaTeX: \newsavebox{\tempturing}
#+LaTeX: \def\boxtimes{\ensuremath{\text{\rlap{$\checkmark$}}\square}}

#+BEGIN_EXPORT latex
  \newcommand{\myfbox}[2][gray!20]{\bgroup\scalebox{.7}{\colorbox{#1}{{\vphantom{pS}#2}}}\egroup} % \fbox
  %\def\myfbox#1{#1} % \fbox
  \def\HPC{\myfbox[gray!40]{HPC}}
  \def\NET{\myfbox[gray!40]{Network}}
  \def\SG{\myfbox[gray!40]{Smart Grids}}
  \def\ECO{\myfbox[gray!40]{Economics}}
  \def\PRIV{\myfbox[gray!40]{Privacy}}
  \def\TRACING{\myfbox[red!20]{Tracing}}
  \def\SIM{\myfbox[green!20]{Simulation}}
  \def\VIZ{\myfbox[red!40]{Visualization}}
  \def\MODELING{\myfbox[green!40]{Stochastic Models}}
  \def\OPT{\myfbox[blue!20]{Optimization}}
  \def\GT{\myfbox[blue!40]{Game Theory}}
#+END_EXPORT

#+BEGIN_EXPORT latex
\def\etal{\textit{et al.}\xspace}
\def\eg{e.g.,\xspace}
#+END_EXPORT

#+BEGIN_EXPORT latex
\def\changefont#1{%
  \setbeamertemplate{itemize/enumerate body begin}{#1}
  \setbeamertemplate{itemize/enumerate subbody begin}{#1}
  #1}
\makeatletter
\newcommand{\verbatimfont}[1]{\renewcommand{\verbatim@font}{\ttfamily#1}}
\makeatother
\verbatimfont{\scriptsize}%small
\let\endmintedbak=\endminted
\def\endminted{\endmintedbak\vspace{-1cm}}

\def\rv#1{\ensuremath{\textcolor{blue}{#1}}\xspace} % DarkBlue
#+END_EXPORT

#+BEGIN_EXPORT latex
\newcommand{\Norm}{\ensuremath{\mathcal{N}}\xspace}
\newcommand{\Unif}{\ensuremath{\mathcal{U}}\xspace}
\newcommand{\Triang}{\ensuremath{\mathcal{T}}\xspace}
\newcommand{\Exp}{\ensuremath{\mathcal{E}}\xspace}
\newcommand{\Bernouilli}{\ensuremath{\mathcal{B}}\xspace}
\newcommand{\Like}{\ensuremath{\mathcal{L}}\xspace}
\newcommand{\Model}{\ensuremath{\mathcal{M}}\xspace}
\newcommand{\E}{\ensuremath{\mathbb{E}}\xspace}
\def\T{\ensuremath{\theta}\xspace}
\def\Th{\ensuremath{\hat{\theta}}\xspace}
\def\Tt{\ensuremath{\tilde{\theta}}\xspace}
\def\Y{\ensuremath{y}\xspace}
\def\Yh{\ensuremath{\hat{y}}\xspace}
\def\Yt{\ensuremath{\tilde{y}}\xspace}
\let\epsilon=\varepsilon
\let\leq=\leqslant
\let\geq=\geqslant

\def\Scalebox#1{\scalebox{.9}{#1}}
\def\ScaleboxI#1{\Scalebox{\textit{#1}}}

\def\pillar#1#2{~\hbox{\hspace{-1em}\rlap{#1}\hspace{4cm}\includegraphics[height=1cm]{#2}}}
#+END_EXPORT
:end:

** A reproducible article
Carl Boettiger: https://github.com/cboettig/noise-phenomena

#+begin_export latex
\begin{center}
  \includegraphics[height=4cm]{images/boetinger1.png}
  \includegraphics[height=4cm]{images/boetinger2.png}
\end{center}
#+end_export

Ingredients:
- [X] A clean file organization and an =Rmarkdown= document
- [X] A public =git= repository
- [X] =Rstudio= in a =Docker= environment available through =Binder=
- [X] Small non sensitive data set

* File Organization and Metadata
** Names matter
\hfill Courtesy of [[https://datacarpentry.org/rr-organization1/][Data Carpentry]] and [[https://the-turing-way.netlify.app/project-design/filenaming.html][The Turing Way]]\hfill


#+latex: \null\hbox{\hspace{-1cm}\scalebox{.76}{
| *Bad*                                             | *Good*                                            |
|-------------------------------------------------+-------------------------------------------------|
| myabstract.docx                                 | 2014-06-08_abstract-for-sla.docx                |
| Joeâ€™s Filenames Use Spaces and Punctuation.xlsx | joes-filenames-are-getting-better.xlsx          |
| figure 1.png                                    | fig01_scatterplot-talk-length-vs-interest.png   |
| fig 2.png                                       | fig02_histogram-talk-attendance.png             |
| JW7d^(2sl@deletethisandyourcareerisoverWx2*.txt | 1986-01-28_raw-data-from-challenger-o-rings.txt |
#+latex: }}\bigskip

*Note*: same reason as we have /variable naming conventions/

#+latex: \null\hbox{\hspace{-1cm}\scalebox{.83}{
| *Bad*                    | *Snakecase* (C++,([[https://peps.python.org/pep-0008/#function-and-variable-names][Python]], [[http://adv-r.had.co.nz/Style.html][R]]) | *Pascalcase* (C#, Go) | *Camelcase* (Java) |
|------------------------+----------------------------+---------------------+------------------|
| VariAble_1             | variable_one               | VariableOne         | variableOne      |
| variaB1e_two           | variable_two               | VariableTwo         | variableTwo      |
| first_day_of_the_month | day_one                    | DayOne              | dayOne           |
| h                      | hours_worked               | HoursWorked         | hoursWorked      |
#+latex: }}

** Fake but Awesome file names                                :noexport:
#+begin_src shell :results output :exports both
cd /tmp/
mkdir -p awesome_names/data
cd awesome_names
for i in data/2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_A01.csv \
     data/2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_A02.csv \
     data/2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_B01.csv \
     data/2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_B02.csv \
     01_marshal-data.R \
     02_pre-dea-filtering.R \
     03_dea-wit-limma-voom.R \
     04_explore-dea-results.R \
     Makefile \
     README \
     LICENCE \
     helper01_load-counts.R \
     helper01_load-exp-des.R \
  ; do touch $i ; done
ls -RC
#+end_src

#+RESULTS:
#+begin_example
01_marshal-data.R         data/                    Makefile
02_pre-dea-filtering.R    helper01_load-counts.R   README
03_dea-wit-limma-voom.R   helper01_load-exp-des.R
04_explore-dea-results.R  LICENCE

./data:
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_A01.csv
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_A02.csv
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_A03.csv
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_B01.csv
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_B02.csv
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_B03.csv
#+end_example

** Three principles for awesome (file) names
#+begin_example
.:
01_marshal-data.R         data/                    Makefile
02_pre-dea-filtering.R    helper01_load-counts.R   README
03_dea-wit-limma-voom.R   helper01_load-exp-des.R
04_explore-dea-results.R  LICENCE

./data:
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_A01.csv
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_A02.csv
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_B01.csv
2013-06-26_BRAWNFTEGASSAY_Plasmid-Celline-100-1MutantFraction_B02.csv
#+end_example
\small\vspace{-1em}
- Plays well with default ordering :: Â 
  #+latex: \vspace{-1em}\begin{multicols}{2}
  - Numeric first
  - YYYY-MM-DD for dates \hfill\bgroup\scriptsize(ISO 8601)\egroup
  - Left pad numbers with 0.
  #+latex: \end{multicols}\vspace{-1em}
- Human readable :: Name contains info (meta-data) on content
- Machine readable :: Â 
  + Regular expression and globbing friendly
    - Avoid spaces, punctuation, accented characters, case sensitivity
    - Easy to compute on
  + Deliberate and consistent use of delimiters (=_= and =-=)
** Organization
# https://datacarpentry.org/rr-organization1/02-file-organization/index.html
# https://the-turing-way.netlify.app/project-design/project-repo/project-repo-advanced.html
#+begin_export latex
\only<1-2>{\vspace{.5cm}}
\begin{center}
  \includegraphics<1>[width=\linewidth]{images/messy_cans.png}%
  \includegraphics<2>[width=\linewidth]{images/messy_files.png}
\end{center}\pause\pause\vspace{-1cm}
#+end_export
*** Face itâ€¦
- There are going to be files \hfill \bgroup\large LOTS\egroupÂ  of
  files\hfill
  - Raw data, Ready to analyze data, computational results,
  - Figures, tables
  - Reports, manuscripts, slides, posters
- The files will *change over time*
- The files will have *relationships* to each other
- Itâ€™ll probably get complicated
*** Mighty weapon
- File organization and naming is a mighty weapon against chaos
- Make a fileâ€™s name and location VERY INFORMATIVE about
  - What it is, why it exists how it relates to other things
- READMEs are great, but the more things are *self-explanatory*, the better
** General tips
#+ATTR_BEAMER: :overlay +-
- Keep all files associated with a project in a single folder
  #+ATTR_BEAMER: :overlay .-
  - Different projects should have separate folders
  - Version control *everything* with git
  - Separate public/private/secret ? Separate by folder (and Git repo)
- All data in =data/=
  #+ATTR_BEAMER: :overlay .-
  - =raw_data/from_alice=, =raw_data/from_bob=
  - =derived_data/from_alice=, =derived_data/from_bob=,
- All code in the =src/=, =source/=, =code/= directory (\textbf{Pick one!})
  #+ATTR_BEAMER: :overlay .-
  - When software is reused in several projects it can make sense to put
    them in own repo (maybe use =git submodule=).
  - Describe your software dependencies (=requirements.txt,= =Dockerfile=, ...)
- Add a =README= file to describe the project and instructions on
  reproducing the results
  #+ATTR_BEAMER: :overlay .-
  - Talk to others in the project about what you do and write it down
- Add an =AUTHOR=, =CONTRIBUTING=, =CODE_OF_CONDUCT= file 
- Include appropriate =LICENSE= file and information on software requirements
** Many possible file organizations
:PROPERTIES:
:BEAMER_OPT: fragile
:END:
***                                                                 :BMCOL:
:PROPERTIES:
:BEAMER_col: .5
:END:
#+ATTR_BEAMER: :overlay +-
- [[https://the-turing-way.netlify.app/project-design/project-repo/project-repo-advanced.html][The Turing Way]]
- [[https://coderefinery.github.io/reproducible-research/organizing-projects/#directory-structure-for-projects][CodeRefinery's suggestions]]
- [[https://inundata.org/talks/rstd19/#/0/11][Ben Marwick's R compendium]] ([[https://github.com/benmarwick/rrtools][rrtools]])
- [[https://cookiecutter.readthedocs.io/en/stable/][Cookiecutter]] (e.g., a [[https://github.com/snakemake-workflows/cookiecutter-snakemake-workflow][Snakemake template]])
***                                                                 :BMCOL:
:PROPERTIES:
:BEAMER_col: .5
:END:

#+latex: \begin{lrbox}{\tempturing}\begin{minipage}{1.3\linewidth}
#+begin_example
project_folder/
â”œâ”€â”€ docs                     # documentation
â”‚   â””â”€â”€ codelist.txt 
â”‚   â””â”€â”€ project_plan.txt
â”‚   â””â”€â”€ ...
â”‚   â””â”€â”€ deliverables.txt
â”œâ”€â”€ data
â”‚   â””â”€â”€ raw/
â”‚       â””â”€â”€ my_data.csv
â”‚   â””â”€â”€ clean/
â”‚       â””â”€â”€ data_clean.csv
â”œâ”€â”€ analysis                 # scripts
â”‚   â””â”€â”€ my_script.R
â”œâ”€â”€ results                  # analysis output     
â”‚   â””â”€â”€ figures
â”œâ”€â”€ .gitignore               # files excluded from git version control 
â”œâ”€â”€ install.R                # environment setup
â”œâ”€â”€ CODE_OF_CONDUCT          # Code of Conduct for community projects
â”œâ”€â”€ CONTRIBUTING             # Contribution guideline for collaborators
â”œâ”€â”€ LICENSE                  # software license
â”œâ”€â”€ README.md                # information about the repo
â””â”€â”€ report.md                # report of project
#+end_example
#+latex: \end{minipage}\end{lrbox}
#+latex: \begin{lrbox}{\tempcoderefinery}\begin{minipage}{1.3\linewidth} 
#+begin_example



project_name/
â”œâ”€â”€ README.md             # overview of the project
â”œâ”€â”€ data/                 # data files used in the project
â”‚   â”œâ”€â”€ README.md         # describes where data came from
â”‚   â””â”€â”€ subfolder/        # may contain subdirectories
â”œâ”€â”€ processed_data/       # intermediate files from the analysis
â”œâ”€â”€ manuscript/           # manuscript describing the results
â”œâ”€â”€ results/              # results of the analysis (data, tables, figures)
â”œâ”€â”€ src/                  # contains all code in the project
â”‚   â”œâ”€â”€ LICENSE           # license for your code
â”‚   â”œâ”€â”€ requirements.txt  # software requirements and dependencies
â”‚   â””â”€â”€ ...
â””â”€â”€ doc/                  # documentation for your project
    â”œâ”€â”€ index.rst
    â””â”€â”€ ...
#+end_example
#+latex: \end{minipage}\end{lrbox}
#+latex: \begin{lrbox}{\temprrtools}\begin{minipage}{1.3\linewidth} 
#+begin_example




Dockerfile
R/                        # R scripts
analysis/
|
â”œâ”€â”€ paper/
â”‚   â”œâ”€â”€ paper.Rmd       # this is the main document to edit
â”‚   â””â”€â”€ references.bib  # this contains the reference list information
â”œâ”€â”€ figures/            # location of the figures produced by the Rmd                
|
â”œâ”€â”€ data/
â”‚   â”œâ”€â”€ raw_data/       # data obtained from elsewhere
â”‚   â””â”€â”€ derived_data/   # data generated during the analysis
|
â””â”€â”€ templates
    â”œâ”€â”€ journal-of-archaeological-science.csl
    |                   # this sets the style of citations & reference list
    â”œâ”€â”€ template.docx   # used to style the output of the paper.Rmd
    â””â”€â”€ template.Rmd
#+end_example
#+latex: \end{minipage}\end{lrbox}
#+latex: \begin{lrbox}{\tempsnakemake}\begin{minipage}{1.3\linewidth} 
#+begin_example








project_name/
â”œâ”€â”€ .gitignore
â”œâ”€â”€ README.md
â”œâ”€â”€ LICENSE.md
â”œâ”€â”€ config.yaml
â”œâ”€â”€ scripts
|    â”œâ”€â”€ script1.py
|    â””â”€â”€ script2.R
â”œâ”€â”€ envs
|     â””â”€â”€ myenv.yaml
â””â”€â”€ Snakefile
#+end_example
#+latex: \end{minipage}\end{lrbox}

#+latex: \begin{overlayarea}{\linewidth}{6cm}
#+latex: \only<1>{\scalebox{.7}{\usebox{\tempturing}}}
#+latex: \only<2>{\scalebox{.7}{\usebox{\tempcoderefinery}}}
#+latex: \only<3>{\scalebox{.7}{\usebox{\temprrtools}}}
#+latex: \only<4>{\scalebox{.7}{\usebox{\tempsnakemake}}}
#+latex: \end{overlayarea}
#+latex: %\includegraphics<2>[height=4cm]{images/directory_structure_Marwick.png}%
***                                                       :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
\medskip

#+begin_center
\bf Pick a strategy, any strategy, just pick one and stick to it!
#+end_center
* Git and Git Annex
** Git
***                                                                 :BMCOL:
:PROPERTIES:
:BEAMER_col: .8
:END:
- Designed by Linus Torvald in 2005 (BitKeeper licensing issues)


- Allows to track versions (i.e., to manage an history) in a
  *distributed* way

  ([[file:../../RR_MOOC/gitlab-inria/mooc-rr-ressources/module1/slides/diapos_git.pdf][Introduction to Git without the command line]])
- Although many common git workflows are centralized (e.g., through
  github and gitlab), git is *ditributed*
***                                                                 :BMCOL:
:PROPERTIES:
:BEAMER_col: .2
:END:
#+latex: \includegraphics[width=\linewidth]{./images/linus.jpg}
***                                                       :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
\bigskip
*Main drawback*: git has been designed and optimized to handle for
source code, not *large binary files*
** Christmas List for Data Management
1. A lightweight =git clone= (do not necessarily download all large files)
   - I.e., more than git tricks (=git clone --depth= and =git subtree=)
2. Garbage collection, i.e., allows to delete large files (even in =.git/=)
3. Get large files on demand and guarantee to get the right ones
4. Allow handling different (possibly unreliable) storage media
\pause

Several proposed extensions for handling large files:
- Git LFS :: Â 
  - Centralized and supported by GitHub (hence by GitLab)
  - Easy to use but fails *all* previous requirements
- *Git Annex* :: by Joey Hess (Debian, Haskell)
  - Steeper learning curve but \newline incredibly powerful
#+latex: \vspace{-2cm}\null\hfill{\includegraphics[width=.3\linewidth]{./images/joey.jpg}}

** Git Annex Principles
- The project is populated with *symbolic links* to the large files
  which end up in =.git/annex/objects=
  #+latex: \begin{lrbox}{\temp}\begin{minipage}{1.3\linewidth} 
  #+begin_example
data/raw_data/uset/Wlight/2021/06/UPH20210610112235.FTS -> 
../../../../../../.git/annex/objects/fw/j8/SHA256E-s8392320--d59d841adb2f5f9eb30d11501440ce53539bcb9aec95b80f6877d2169e8c6481.FTS/SHA256E-s8392320--d59d841adb2f5f9eb30d11501440ce53539bcb9aec95b80f6877d2169e8c6481.FTS
  #+end_example
  #+latex: \end{minipage}\end{lrbox}
  #+latex: \scalebox{.9}{\usebox{\temp}}\medskip
- You may =git annex drop= files (remove from the annex)
- Large files are generally identified by their content (SHA256)

  $\leadsto$ Check content when =git annex get= \medskip
- *Remotes* are ways to access files (a USB key, a server through SSH or
  webdav, a web server, Amazon S3, etc.)
  - Files may be duplicated/migrated between remotes\medskip
- Information on the remotes is stored in a *special =git-annex= branch*
  which must be synchronized between git repos
** Demo: Initialization
# - Sources d'inspiration possibles: 
#   - https://git-memo.readthedocs.io/en/latest/annex.html
#   - https://git-annex.branchable.com/walkthrough/

#+begin_src shell :session *shell* :results none :exports none
rm -rf /tmp/test-git-annex
mkdir /tmp/test-git-annex
cd /tmp/test-git-annex
mkdir /tmp/test-git-annex/.git
echo "[user]
        name = Arnaud Legrand
        email = arnaud.legrand@imag.fr

[color]
    ui = false
    branch = false
    diff = false
    interactive = false
    status = false
    log = false
    init = false
" > .git/config
     git config --global color.ui false
     git config --global advice.ignoredHook false
     export TERM="xterm" # for git branch... :(
#+end_src

#+begin_src shell :session *shell* :results output :exports both
pwd
git init
echo "Hello" > README
git add README ; git commit -m "Initial commit"
git branch
git annex init "My laptop"
git branch
#+end_src

#+RESULTS:
#+begin_example
/tmp/test-git-annex
Initialized empty Git repository in /tmp/test-git-annex/.git/
icarus:/tmp/test-git-annex$ [master (root-commit) 7f50a1f] Initial commit
 1 file changed, 1 insertion(+)
 create mode 100644 README
,* master
init My laptop ok
(recording state in git...)
git-annex
,* master
#+end_example
** Demo: Adding data
#+begin_src shell :session *shell* :results output :exports both
mkdir -p data/
git config annex.largefiles 'largerthan=100kb and include=data/*'
#+end_src

#+RESULTS:

#+begin_src shell :session *shell* :results output :exports both
echo "random; stuff" > data/foo.csv
dd if=/dev/zero of=data/zero.dat bs=1M count=1
ls -l data/
git annex add data/* ## should be git add !!
ls -l data/
git commit -m "Adding data files"
#+end_src

#+RESULTS:
#+begin_example
1048576 bytes (1.0 MB, 1.0 MiB) copied, 0.00545621 s, 192 MB/s
-rw-r--r-- 1 alegrand alegrand      14 Oct 26 23:15 foo.csv
-rw-r--r-- 1 alegrand alegrand 1048576 Oct 26 23:15 zero.dat
add data/foo.csv (non-large file; adding content to git repository) ok
add data/zero.dat ok
(recording state in git...)
-rw-r--r-- 1 alegrand alegrand  14 Oct 26 23:15 foo.csv
../.git/annex/objects/fP/jz/SHA256E-s1048576--30e14955ebf1352266dc2ff8067e68104607e750abb9d3b36582b8af909fcb58.dat/SHA256E-s1048576--30e14955ebf1352266dc2ff8067e68104607e750abb9d3b36582b8af909fcb58.dat
[master 91c2449] Adding data files
 2 files changed, 2 insertions(+)
 create mode 100644 data/foo.csv
 create mode 120000 data/zero.dat
#+end_example
** Demo: Adding a remote on a USB key (1/2)
#+begin_src shell :session *shell* :results none :exports both
rm -rf /media/alegrand/7C78-3F81/test-git-annex
#+end_src

#+begin_src shell :session *shell* :results output :exports both
cd /media/alegrand/7C78-3F81
git clone /tmp/test-git-annex
ls -lR test-git-annex/
#+end_src

#+RESULTS:
#+begin_example

Cloning into 'test-git-annex'...
done.
test-git-annex/:
total 8
drwxr-xr-x 2 alegrand alegrand 4096 Oct 26 23:16 data
-rw-r--r-- 1 alegrand alegrand    6 Oct 26 23:16 README

test-git-annex/data:
total 8
-rw-r--r-- 1 alegrand alegrand  14 Oct 26 23:16 foo.csv
-rw-r--r-- 1 alegrand alegrand 201 Oct 26 23:16 zero.dat
#+end_example
** Demo: Adding a remote on a USB key (2/2)
Let's initialize the USB key and tell it about the laptop
#+begin_src shell :session *shell* :results output :exports both
cd test-git-annex
git annex init "portable USB drive"
git remote add laptop /tmp/test-git-annex
#+end_src

#+RESULTS:
#+begin_example
init portable USB drive 
  Detected a filesystem without fifo support.
  Disabling ssh connection caching.
  Detected a crippled filesystem.
  Entering an adjusted branch where files are unlocked as this filesystem does not support locked files.
Switched to branch 'adjusted/master(unlocked)'
ok
(recording state in git...)
#+end_example

Let's tell the laptop about the USB key
#+begin_src shell :session *shell* :results output :exports both
cd /tmp/test-git-annex
git remote add usbdrive /media/alegrand/7C78-3F81/test-git-annex
#+end_src

#+RESULTS:

** Demo: Syncing the annexes (not the content!)
#+begin_src shell :session *shell* :results output :exports both
cd /media/alegrand/7C78-3F81/test-git-annex
git annex sync laptop
#+end_src

#+RESULTS:
#+begin_example

commit 
On branch adjusted/master(unlocked)
nothing to commit, working tree clean
ok
pull laptop 
From /tmp/test-git-annex
laptop/git-annex
laptop/master
ok
push laptop 
Enumerating objects: 5, done.
Delta compression using up to 4 threads
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To /tmp/test-git-annex
synced/master
synced/git-annex
ok
#+end_example

** Demo: Getting file content
Now get the content!
#+begin_src shell :session *shell* :results output :exports both
cd /media/alegrand/7C78-3F81/test-git-annex
git annex get data/zero.dat
#+end_src

#+RESULTS:
: 
: get data/zero.dat (from laptop...)
: 31.98 KiB       268 KiB/s 3s9%    95.95 KiB       223 KiB/s 4s16%   159.92 KiB      228 KiB/s 3s22%   223.89 KiB      229 KiB/s 3s28%   287.86 KiB      219 KiB/s 3s34%   351.83 KiB      228 KiB/s 2s41%   415.8 KiB       228 KiB/s 2s47%   479.77 KiB      229 KiB/s 2s53%   543.73 KiB      232 KiB/s 2s59%   607.7 KiB       232 KiB/s 1s66%   671.67 KiB      232 KiB/s 1s72%   735.64 KiB      228 KiB/s 1s78%   799.61 KiB      229 KiB/s 0s84%   863.58 KiB      229 KiB/s 0s91%   927.55 KiB      229 KiB/s 0s97%   991.52 KiB      231 KiB/s 0s100%  1 MiB           117 KiB/s 0s                                  ok
: (recording state in git...)

** Demo: Dropping files
Let's try to get rid of the big file on my laptop
#+begin_src shell :session *shell* :results output :exports both
cd /tmp/test-git-annex
git annex drop data/zero.dat
#+end_src

#+RESULTS:
: drop data/zero.dat (unsafe) 
:   Could only verify the existence of 0 out of 1 necessary copy
:   Rather than dropping this file, try using: git annex move
:   (Use --force to override this check, or adjust numcopies.)
: failed
: drop: 1 failed
** Demo: Dropping files (2/2)
#+begin_src shell :session *shell* :results output :exports both
git annex sync
git annex drop data/zero.dat
#+end_src

#+RESULTS:
: commit 
: On branch master
: nothing to commit, working tree clean
: ok
: pull usbdrive 
: remote: Enumerating objects: 16, done.
: remote: Counting objects: 100% (16/16), done.
: remote: Compressing objects: 100% (8/8), done.
: remote: Total 9 (delta 1), reused 0 (delta 0), pack-reused 0
: Unpacking objects: 100% (9/9), 852 bytes | 106.00 KiB/s, done.
: From /media/alegrand/7C78-3F81/test-git-annex
:  * [new branch]      adjusted/master(unlocked) -> usbdrive/adjusted/master(unlocked)
:  * [new branch]      git-annex                 -> usbdrive/git-annex
:  * [new branch]      master                    -> usbdrive/master
:  * [new branch]      synced/master             -> usbdrive/synced/master
: ok
: (merging usbdrive/git-annex into git-annex...)
: drop data/zero.dat ok
# : (recording state in git...)

\vspace{-1em}Using =git annex move --to usbdrive= in the first place would have been
more convenient.
** Demo: Getting files back (2/2)
#+begin_src shell :session *shell* :results output :exports both
git annex get data/zero.dat
#+end_src

#+RESULTS:
: get data/zero.dat (from usbdrive...) 
: ok
: (recording state in git...)

** Large files cannot be modified inadvertently
#+begin_src shell :session *shell* :results output :exports both
dd if=/dev/zero of=data/zero.dat bs=2M count=1
#+end_src

#+RESULTS:
: dd: failed to open 'data/zero.dat': Permission denied

You should =git annex unlock= them first.

#+begin_src shell :session *shell* :results output :exports both
dd if=/dev/zero of=data/zero2.dat bs=2M count=1
git annex add data/zero2.dat
git annex move data/zero2.dat --to usbdrive
#+end_src

#+RESULTS:
: 1+0 records in
: 1+0 records out
: 2097152 bytes (2.1 MB, 2.0 MiB) copied, 0.0106413 s, 197 MB/s
: add data/zero2.dat
: 31.98 KiB        14 MiB/s 0s100%  2 MiB           110 MiB/s 0s                                  ok
: (recording state in git...)
: move data/zero2.dat (to usbdrive...) 
: ok
: (recording state in git...)
** There is more!
#+begin_src shell :session *shell* :results output :exports both
cd data/
git annex addurl --preserve-filename --pathdepth=2 \ 
    https://www.sidc.be/DATA/uset/Wlight/2014/06/UPH20140601105039.FTS 
#+end_src

#+RESULTS:
: addurl https://www.sidc.be/DATA/uset/Wlight/2014/06/UPH20140601105039.FTS
: (to uset/Wlight/2014/06/UPH20140601105039.FTS) ok
: (recording state in git...)

=git-annex= can also store files in Amazon S3, Glacier, on a rsync
server, in WebDAV, or even pull files down from the web and
bittorrent. 

Bonus: Files stored on special remotes can easily be *encrypted*!
* Archiving
** Archives
\small
#+LaTeX: \hfill \raisebox{-1ex}{\includegraphics[height=.8cm]{images/logo/git_logo.png}}
#+LaTeX: \raisebox{-.5ex}{\includegraphics[height=.8cm]{images/logo/github_logo.png}} or
#+LaTeX: \raisebox{-1.4ex}{\includegraphics[height=.8cm]{images/logo/gitlab_logo.png}}
$=$ awesome collaborations ($\ne$ archive)\hfill\null

- D. Spinellis. /[[https://www.spinellis.gr/sw/url-decay/][The Decay and Failures of URL References]]/. CACM, 46(1),
  2003
    
  #+BEGIN_QUOTE
    The half-life of a referenced URL is approximately 4 years from its
    publication date.
  #+END_QUOTE
- P. Habibzadeh. /[[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3885908/][Decay of References to Web sites in Articles
 Published in]]/ /[[https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3885908/][General Medical Journals: Mainstream vs Small
 Journals]]/. Applied Clinical Informatics. 4 (4), 2013
 #+BEGIN_QUOTE
    half life ranged from 2.2 years in EMHJ to 5.3 years in BMJ
 #+END_QUOTE
- Discontinuated forges: Code Space, Gitorious, Google code, Inria Gforge
\normalsize\pause
- Article archives :: 
  #+LaTeX: \raisebox{-1.5ex}{\includegraphics[height=.8cm]{images/logo/ArXiv-web.png}}
  #+LaTeX: \raisebox{-1.5ex}{\includegraphics[height=.8cm]{images/logo/LogoHAL.png}}
  #+LaTeX: \hfill\raisebox{-3em}{\includegraphics[height=1.8cm]{images/logo/Internet-archive.png}}\vspace{-2em}
- Data archives ::
  #+LaTeX: \raisebox{-1.5ex}{\includegraphics[height=.8cm]{images/logo/Figshare-logo.png}}
  #+LaTeX: \raisebox{-1.5ex}{\includegraphics[height=.8cm]{images/logo/Zenodo-logo.jpg}}

- Software Archive ::
  #+LaTeX: \raisebox{-2.4ex}{\includegraphics[height=1cm]{images/logo/swh-logo.png}} 
  Collect/Preserve/Share
** Archiving from Github on Zenodo

Zenodo was created by OpenAIRE and CERN to provide a place for
researchers to deposit datasets. It was launched in 2013, allowing
researchers from any domain to upload files up to 50 GB.

Zenodo has a special [[https://docs.github.com/en/repositories/archiving-a-github-repository/referencing-and-citing-content][integration with GitHub]] to make code hosted in
GitHub easy to cite and archive.

Once configured, each time you create a new GitHub release:
- Github creates a =zip= file of the head of your repository
- Uploads it on Zenodo
- Zenodo issues a new DOI

Remember [[https://github.com/cboettig/noise-phenomena][Carl Boettiger's reproducible article]] ?

This will obviously not work with =git annex= nor =git lfs= (see
https://zenodo.org/record/6361006#.Y1mt29JBw1u) but there is a
prototype.
* Containers and package managers
** WIP slides

#+begin_src shell :results output raw :exports results
for i in `find ../../RR_MOOC/gitlab-inria/mooc-rr2-ressources/docs/module2/ -name 'slides.pdf' | sort`; do
    j=`echo $i | sed -e 's/^.*module2\///g' -e 's/\//~/g'`
    echo $i | sed -e 's/^/- [[file:/' -e "s/$/][$j]]/"
done
#+end_src

#+RESULTS:
- [[file:../../RR_MOOC/gitlab-inria/mooc-rr2-ressources/docs/module2/seq1-sw_env_intro/unit1-lecture/slides.pdf][seq1-sw_env_intro~unit1-lecture~slides.pdf]]
- [[file:../../RR_MOOC/gitlab-inria/mooc-rr2-ressources/docs/module2/seq2-package_mgmt/unit1-lecture/slides.pdf][seq2-package_mgmt~unit1-lecture~slides.pdf]]
- [[file:../../RR_MOOC/gitlab-inria/mooc-rr2-ressources/docs/module2/seq3-isolation_and_containers/unit1-lecture/slides.pdf][seq3-isolation_and_containers~unit1-lecture~slides.pdf]]
- [[file:../../RR_MOOC/gitlab-inria/mooc-rr2-ressources/docs/module2/seq3-isolation_and_containers/unit2-lecture/slides.pdf][seq3-isolation_and_containers~unit2-lecture~slides.pdf]]

