#+TITLE:     Univariate Descriptive Statistics
#+AUTHOR:    Arnaud Legrand, Jean-Marc Vincent
#+DATE: RICM4 Probability and Simulation Lecture
#+STARTUP: beamer overview indent
#+TAGS: noexport(n)
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [11pt,xcolor=dvipsnames,presentation]
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+LATEX_HEADER: \input{org-babel-style-preembule.tex}

#+LaTeX: \input{org-babel-document-preembule.tex}

# http://www.cse.wustl.edu/~jain/cse567-08/ftp/k_12smd.pdf

* Descriptive statistics of an univariate sample
** Motivation
*** Motivation
We have set up a world where we keep collecting data, *huge amount of
data*...

Sweet, what knowledge can we exctract from such data? How do we
summarize a data set? 

With a few numbers, some graphics? How? Why is this difficult? \medskip

**** 
#+BEGIN_QUOTE
There are three kinds of lies: lies, damned lies and statistics\vspace{-1.5em}
#+END_QUOTE
#+LaTeX: \begin{flushright}
-- Mark Twainâ€™s Autobiography
# The Chapters from the North American Review
#+LaTeX: \end{flushright}

#+BEGIN_QUOTE
Statistical thinking will one day be as necessary for efficient
citizenship as the ability to read or write\vspace{-1.5em}
#+END_QUOTE
#+LaTeX: \begin{flushright}
    -- Attributed to H. G. Wells 
#+LaTeX: \end{flushright}

#+BEGIN_QUOTE
The only statistics you can trust are those you falsified yourself\vspace{-1.5em}
#+END_QUOTE
#+LaTeX: \begin{flushright}
    -- Winston Churchill
#+LaTeX: \end{flushright}

** Initial step
*** I just got new Tees!
- A series of *measurements* (one value per measurement)
- *Nature* of the measurements
  - Factors (*nominal data*)
    #+begin_src R :results output :session :exports results
    set.seed(42);
    options(width=58);
    T_color = sample(size=20, 
        factor(c("Black","Red","Blue","White","Green")), 
        prob=c(.6,.1,.1,.1,.1),replace=T);
    T_color
    #+end_src

    #+RESULTS:
    :  [1] Red   Red   Black Green Blue  Black White Black Blue 
    : [10] White Black White Red   Black Black Red   Red   Black
    : [19] Black Black
    : Levels: Black Blue Green Red White

  - Ordered factors (*ordinal data*)
    #+begin_src R :results output :session :exports results
    options(width=55);
    sizes = c("S","M","L","XL");
    sizes = factor(sizes, levels=sizes, ordered=T)
    T_size = sample(size=20, sizes,
                    prob=c(.05,.75,.1,.05),replace=T);
    T_size
    #+end_src

    #+RESULTS:
    :  [1] XL M  S  XL M  M  M  XL M  L  M  L  M  M  M  L  M 
    : [18] M  XL M 
    : Levels: S < M < L < XL

  - Numbers (e.g., price, duration, \dots) (*numerical data*)
    #+begin_src R :results output :session :exports results
    options(width=58);
    T_price = round(10+rnorm(20,sd=3),digit=1);
    T_price
    #+end_src

    #+RESULTS:
    :  [1]  9.1  4.7  9.5 13.6 15.7  8.7  9.2  4.7 11.4  8.1
    : [11] 11.4 12.1 13.1  8.2 11.5  4.8  7.6  7.4  2.8 10.1

#+begin_src R :results output :session :exports both
str(T_size); # May want to use the str function
#+end_src

#+RESULTS:
:  Ord.factor w/ 4 levels "S"<"M"<"L"<"XL": 4 2 1 4 2 2 2 4 2 3 ...

*** Are these sample "structured"?
#+LaTeX: \begin{columns}\begin{column}{.5\linewidth}
Use =plot.ts= (for *time series*)

#+begin_src R :results output graphics :file pdf_babel/ds_ts1.pdf :exports both :width 4 :height 6 :session
par(mfrow=c(3,1));
plot.ts(T_color,xy.lines=F);
plot.ts(T_size,xy.lines=F);
plot.ts(T_price,xy.lines=F);
#+end_src
#+LaTeX: \end{column}\begin{column}{.5\linewidth}
#+RESULTS:
[[file:pdf_babel/ds_ts1.pdf]]
#+LaTeX: \end{column}\end{columns}
*** Are these sample "structured"?
Fancier output can be built using =ggplot2=
#+begin_src R :results output graphics :file pdf_babel/ds_ts2.pdf :exports results :width 5 :height 5 :session
library(ggplot2)
library(gridExtra)
p1 = ggplot(data.frame(Time=1:length(T_color),Color=T_color),
            aes(x=Time,y=Color,fill=Color)) +
     geom_point(shape=21)  + theme_bw() + 
     scale_fill_manual(values = tolower(as.character(levels(T_color))))
p2 = ggplot(data.frame(Time=1:length(T_size),Size=T_size),aes(x=Time,y=Size,size=Size)) +
     geom_point() + theme_bw();
p3 = ggplot(data.frame(Time=1:length(T_price),Price=T_price),aes(x=Time,y=Price)) +
     geom_line(color="gray") + geom_point() + theme_bw();
grid.arrange(p1,p2,p3,ncol=1);
#+end_src

#+BEGIN_CENTER
  #+ATTR_LaTeX: :width .6\linewidth
  #+RESULTS:
  [[file:pdf_babel/ds_ts2.pdf]]
#+END_CENTER
*** There could indeed be "trends"
#+begin_src R :results output :session :exports none
set.seed(42);
N=100;
T_price_time = 1:N;
T_price_trend = round(10+.07*T_price_time + rnorm(20,sd=3) + rnorm(N,sd=.5),digit=1);
T_price_trend2 = atan(T_price_time/10)+.2*rnorm(N);
T_price_trend2[60:64] = 0;
T_price_trend3 = 2+sin(T_price_time/5)*(1+rnorm(N))+.2*rnorm(N);
T_price_trend4 = 5+atan(T_price_time-N/2)+runif(N);
T_price_trend4[30] = 12
#+end_src

#+RESULTS:

#+begin_src R :results output graphics :file pdf_babel/ds_ts3.pdf :exports results :width 8 :height 6 :session
par(mfrow=c(2,2));
plot.ts(T_price_trend);
plot.ts(T_price_trend2);
plot.ts(T_price_trend3);
plot.ts(T_price_trend4);
par(mfrow=c(1,1));
#+end_src

#+RESULTS:
[[file:pdf_babel/ds_ts3.pdf]]
*** What should we look for?
- Structured/unstructured
- Trend, evolution
- Localization/order of magnitude
- Outliers, aberrant values

This preliminary study will:
- guide your analysis
- provide feedback on your experimental setup\smallskip

This may be harder to do than it looks...

#+begin_src R :results output graphics :file pdf_babel/ds_ts4.pdf :exports results :width 8 :height 3 :session
ggplot(data.frame(Time=1:5000,Price=rnorm(5000)),aes(x=Time,y=Price)) +
     geom_line(color="gray") + geom_point() + theme_bw();
#+end_src

#+RESULTS:
[[file:pdf_babel/ds_ts4.pdf]]

** Histograms of "Stable" samples
*** Bar charts vs. Histograms
#+LaTeX: \begin{columns}\begin{column}{.5\linewidth}
#+begin_src R :results output graphics :file pdf_babel/ds_bar1.pdf :exports both :width 4 :height 6 :session
par(mfrow=c(3,1));
plot(T_color,xy.lines=F);
plot(T_size,xy.lines=F);
hist(T_price,xy.lines=F);
#+end_src
#+LaTeX: \end{column}\begin{column}{.5\linewidth}
#+RESULTS:
[[file:pdf_babel/ds_bar1.pdf]]
#+LaTeX: \end{column}\end{columns}
*** Bar charts vs. Histograms
Again, fancier output can be built using =ggplot2=
#+begin_src R :results output graphics :file pdf_babel/ds_bar2.pdf :exports results :width 5 :height 5 :session
library(ggplot2)
library(gridExtra)
p1 = ggplot(data.frame(Time=1:length(T_color),Color=T_color),
            aes(x=Color,fill=Color)) + 
     geom_bar(color="black")  + 
     scale_fill_manual(values = tolower(as.character(levels(T_color))))
p2 = ggplot(data.frame(Time=1:length(T_size),Size=T_size),
            aes(x=Size)) +
     geom_bar(fill="gray",color="black") + theme_bw();
p3 = ggplot(data.frame(Time=1:length(T_price),Price=T_price),
            aes(x=Price)) +
     geom_histogram(fill="gray",color="black") + theme_bw();
grid.arrange(p1,p2,p3,ncol=1);
#+end_src

#+BEGIN_CENTER
  #+ATTR_LaTeX: :width .6\linewidth
  #+RESULTS:
  [[file:pdf_babel/ds_bar2.pdf]]
#+END_CENTER
*** Wait, why are these histograms so different?
#+begin_src R :results output graphics :file pdf_babel/ds_bar3_1.pdf :exports none :width 5 :height 3.5 :session
hist(T_price,xy.lines=F);
#+end_src

#+RESULTS:
[[file:pdf_babel/ds_bar3_1.pdf]]

#+begin_src R :results output graphics :file pdf_babel/ds_bar3_2.pdf :exports none :width 5 :height 3.5 :session
hist(T_price,xy.lines=F,probability=T);
#+end_src

#+RESULTS:
[[file:pdf_babel/ds_bar3_2.pdf]]

#+begin_src R :results output graphics :file pdf_babel/ds_bar3_3.pdf :exports none :width 5 :height 2.3 :session
ggplot(data.frame(Time=1:length(T_price),Price=T_price),
            aes(x=Price)) +
     geom_histogram(fill="gray",color="black") + theme_bw();
#+end_src

#+RESULTS:
[[file:pdf_babel/ds_bar3_3.pdf]]

#+begin_src R :results output graphics :file pdf_babel/ds_bar3_4.pdf :exports none :width 5 :height 2.3 :session
ggplot(data.frame(Time=1:length(T_price),Price=T_price),
            aes(x=Price, y=..density..)) +
     geom_histogram(fill="gray",color="black") + theme_bw();
#+end_src

#+RESULTS:
[[file:pdf_babel/ds_bar3_4.pdf]]

#+begin_src R :results output graphics :file pdf_babel/ds_bar3_5.pdf :exports none :width 5 :height 2.3 :session
ggplot(data.frame(Time=1:length(T_price),Price=T_price),
            aes(x=Price, y=..density..)) +
     geom_histogram(fill="gray",color="black",binwidth=2) + theme_bw();
#+end_src

#+RESULTS:
[[file:pdf_babel/ds_bar3_5.pdf]]

#+LaTeX: \begin{columns}\begin{column}{.5\linewidth}
  #+ATTR_LaTeX: :width \linewidth
  [[file:pdf_babel/ds_bar3_1.pdf]]

  #+ATTR_LaTeX: :width \linewidth
  [[file:pdf_babel/ds_bar3_2.pdf]]
#+LaTeX: \end{column}\begin{column}{.5\linewidth}
  #+ATTR_LaTeX: :width \linewidth
  [[file:pdf_babel/ds_bar3_3.pdf]]

  #+ATTR_LaTeX: :width \linewidth
  [[file:pdf_babel/ds_bar3_4.pdf]]

  #+ATTR_LaTeX: :width \linewidth
  [[file:pdf_babel/ds_bar3_5.pdf]]
#+LaTeX: \end{column}\end{columns}
*** Beware of histograms
#+BEGIN_CENTER
  \textbf{Rather indicate density than count} \medskip
#+END_CENTER

*How many bins? Which binwidth?*
- =ggplot= defaults to $k=30$ bins of width $h$ = =range/30= \frowny
- Square-root choice: $k = \sqrt{n}$ (Excel, \frowny)
- Sturges: $k = \lceil \log_2 n + 1 \rceil$ (default for =hist= in R)
- Rice: $k = \lceil 2 n^{1/3}\rceil$
- Scott: $k = \left \lceil \frac{\max x - \min x}{h}
  \right \rceil$, where: $h = \frac{3.5 \hat \sigma}{n^{1/3}}$ (equivalent to Rice
  under some conditions)
- ...
*** Beware of Histograms
*At which value should the bin start?*
- In most cases, the binning is aligned on human readable values,
  which can create nasty artifacts (nice illustration from
  [[http://stats.stackexchange.com/questions/51718/assessing-approximate-distribution-of-data-based-on-a-histogram/][/stackexchange/]])
#+begin_src R :results output graphics :file pdf_babel/ds_bar4.pdf :exports results :width 7 :height 4 :session
A <- c(3.15,5.46,3.28,4.2,1.98,2.28,3.12,4.1,3.42,3.91,2.06,5.53,
       5.19,2.39,1.88,3.43,5.51,2.54,3.64,4.33,4.85,5.56,1.89,4.84,
       5.74,3.22, 5.52,1.84,4.31,2.01,4.01,5.31,2.56,5.11,2.58,4.43,
       4.96,1.9,5.6,1.92);

df = rbind(data.frame(val=A,set="A"),
           data.frame(val=A-.25,set="B"),
           data.frame(val=A-.5, set="C"),
           data.frame(val=A-.75,set="D"));
df$y = runif(length(A),min=3,max=6);

p1 = ggplot(df,aes(x=val)) + theme_bw() + xlab("Values") +
     facet_wrap(~set,ncol=2) + 
     geom_histogram(binwidth=1,fill="gray",color="black") + 
     geom_point(data=df,aes(x=val,y=y),shape=21,size=2,fill="white",alpha=.5);
# p2 = ggplot(df,aes(y=factor(set, levels = rev(levels(set))),x=val)) + theme_bw() +
#        geom_vline(xintercept=1:6, colour="green", linetype = "longdash") +
#        geom_point(shape=21,size=3) + xlim(0,7) + ylab("Set") + xlab("Values");


x <- c(1.03, 1.24, 1.47, 1.52, 1.92, 1.93, 1.94, 1.95, 1.96, 1.97, 1.98, 
  1.99, 2.72, 2.75, 2.78, 2.81, 2.84, 2.87, 2.9, 2.93, 2.96, 2.99, 3.6, 
  3.64, 3.66, 3.72, 3.77, 3.88, 3.91, 4.14, 4.54, 4.77, 4.81, 5.62)
# p3_1 = ggplot(data.frame(val=x),aes(x=val)) + theme_bw() + xlab("Values") + xlim(0,6) +
#        geom_histogram(binwidth=1,fill="gray",color="black") + 
#        geom_point(y=2.5,shape=21,size=3);
# p3_2 = ggplot(data.frame(val=x),aes(x=val)) + theme_bw() + xlab("Values") + xlim(0,6) +
#        geom_histogram(binwidth=.8,origin=.3,fill="gray",color="black") + 
#        geom_point(y=2.5,shape=21,size=3);

df = rbind(data.frame(val=x,set="E",binwidth=1,origin=1),
           data.frame(val=x,set="E ",binwidth=.8,origin=.3));
df$y= runif(length(x),min=3,max=6);
p3 = ggplot(df,aes(x=val)) + 
       theme_bw() + xlab("Values") + xlim(0,6) +
       facet_wrap(~set,ncol=1) + 
       geom_histogram(data=df[df$binwidth==1,],binwidth=1,origin=1,fill="gray",color="black") + 
       geom_histogram(data=df[df$binwidth==.8,],binwidth=.8,origin=.3,fill="gray",color="black") +
       geom_point(aes(y=y),shape=21,fill="white",size=3,alpha=.5) +
       geom_vline(xintercept=1:6, colour="green", linetype = "longdash");

grid.arrange(p1,p3,nrow=1,widths=c(1.5,1));
# grid.arrange(p1,p2,nrow=1);
# grid.arrange(p3_1,p3_2,ncol=1);
#+end_src

#+BEGIN_CENTER
  #+ATTR_LaTeX: :width \linewidth
  #+RESULTS:
  [[file:pdf_babel/ds_bar4.pdf]]
#+END_CENTER

*** What should we look for?
*Shape*: flat? symmetrical? multi-modal? Play with =binwidth= (and
=origin= if you have few samples) to uncover the full story behind your
data...

#+begin_src R :results output graphics :file pdf_babel/ds_bar5.pdf :exports results :width 7 :height 4 :session
library(ggplot2)
library(gridExtra)
p1 = ggplot(data.frame(x=rnorm(1000,mean=5,sd=2)),
            aes(x=x, y=..density..)) + theme_bw() +
     geom_histogram(color="black",fill="gray",binwidth=1) 
p2 = ggplot(data.frame(x=runif(1000,min=2,max=40)),
            aes(x=x, y=..density..)) + theme_bw() +
     geom_histogram(color="black",fill="gray",binwidth=5) 

x = rbinom(1000,size=1,prob=.3)
x = 4*x + rnorm(1000)
p3 = ggplot(data.frame(x=x),
            aes(x=x, y=..density..)) + theme_bw() +
     geom_histogram(color="black",fill="gray",binwidth=1) 

x = rbinom(1000,size=1,prob=.3)
x = 4*x + rexp(1000) + .1*rnorm(1000)
p4 = ggplot(data.frame(x=x),
            aes(x=x, y=..density..)) + theme_bw() +
     geom_histogram(color="black",fill="gray",binwidth=1) 

p5 = ggplot(data.frame(x=rgamma(1000,shape=.2)),
            aes(x=x, y=..density..)) + theme_bw() +
     geom_histogram(color="black",fill="gray",binwidth=.5) 

p6 = ggplot(data.frame(x=rlnorm(1000)),
            aes(x=x, y=..density..)) + theme_bw() +
     geom_histogram(color="black",fill="gray",binwidth=1) 

grid.arrange(p1,p2,p3,p4,p5,p6,nrow=2);
#+end_src

#+BEGIN_CENTER
  #+ATTR_LaTeX: :width \linewidth
  #+RESULTS:
  [[file:pdf_babel/ds_bar5.pdf]]
#+END_CENTER

** Single mode: central tendency
*** Nominal Values
#+LaTeX: \begin{columns}\begin{column}{.6\linewidth}
- What is the *mode* (most frequent value)?
- Sort values according to their frequency...
  #+begin_src R :results output :session :exports both
  summary(T_color)
  #+end_src

  #+RESULTS:
  : Black  Blue Green   Red White 
  :    11     1     1     2     5

#+LaTeX: \end{column}\begin{column}{.4\linewidth}
  [[file:pdf_babel/ct_bar1.pdf]]

#+LaTeX: \end{column}\end{columns}\bigskip

\small
#+begin_src R :results output graphics :file pdf_babel/ct_bar1.pdf :exports code :width 4.5 :height 4 :session
col_freq=table(T_color);
T_color <- factor(T_color,
    levels = names(col_freq[order(col_freq, decreasing = TRUE)]));
plot(T_color);
#+end_src

#+RESULTS:
[[file:pdf_babel/ct_bar1.pdf]]

*** Ordinal Values
#+LaTeX: \begin{columns}\begin{column}{.5\linewidth}
- What is the *mode* (most frequent value)?
  #+begin_src R :results output :session :exports both
  summary(T_size)
  #+end_src

  #+RESULTS:
  :  S  M  L XL 
  :  1 17  1  1
- May still want to sort values according to their frequency...
- *Median*: not implemented in standard R for ordinal values, as it's
  not well defined

#+LaTeX: \end{column}\begin{column}{.5\linewidth}
  [[file:pdf_babel/ct_bar2.pdf]]

#+LaTeX: \end{column}\end{columns}

\small

#+begin_src R :results output :session :exports both
median(T_size)
library(DescTools)
median(T_size) # :(
#+end_src

#+RESULTS:
: Error in median.default(T_size) : requires numerical data
: [1] NA

#+begin_src R :results output graphics :file pdf_babel/ct_bar2.pdf :exports none :width 4.5 :height 4 :session
plot(T_size);
#+end_src

#+RESULTS:
[[file:pdf_babel/ct_bar2.pdf]]
*** Numerical Values
#+begin_src R :results output :session :exports both
str(T_price);
#+end_src

#+RESULTS:
:  num [1:20] 14.5 13.1 9.3 6.9 8.6 7.2 7.3 12.4 13.1 16 ...

#+begin_src R :results output :session :exports both
summary(T_price);
#+end_src

#+RESULTS:
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
:   5.200   7.275   9.500   9.960  12.580  16.000

- =min=, =max=, =median= in R
- Median: 50% of values are smaller than 9.5\\\quad (a possible measure of *central tendency*)

*** Numerical Values
The *mode* and the *median* are measures of *central tendency* (typical
value)
- *Note*: There may be several modes and it depends on binning...

There is also the (arithmetic) *mean*: $A = \overline{x} = \frac{1}{N}\sum_{i=1}^N x_i$
#+begin_src R :results output :session :exports both
mean(T_price)
#+end_src

#+RESULTS:
: [1] 9.96

#+begin_src R :results output graphics :file pdf_babel/ct_hist.pdf :exports results :width 6 :height 3 :session
df = data.frame(x=rgamma(1000,shape=2));
bw = .5;

bks = hist(df$x,plot=F,breaks=ceiling(diff(range(df$x))/bw));
ibks = bks$counts==max(bks$counts)
Mode = mean(c(bks$breaks[c(ibks,F)], bks$breaks[c(F,ibks)]));

ct = rbind(data.frame(x=median(df$x), label="Median", y=.3),
           data.frame(x=mean(df$x), label="Mean", y=.2),
           data.frame(x=Mode, label="Mode", y=.4));

ggplot(df, aes(x=x, y=..density..)) + theme_bw() +
     geom_histogram(alpha=.3,color="black", fill="gray", binwidth=bw)  +
     geom_vline(data=ct, aes(xintercept=x,color=label),linetype = "longdash") +
     geom_text(data=ct, aes(x=x+.2,y=y,label=label,color=label),hjust=0) +
     scale_color_brewer(palette="Set1");
#+end_src

#+RESULTS:
[[file:pdf_babel/ct_hist.pdf]]

*** Things to know about the mean
- This measure is sensitive to "*outliers*".
  - One aberrant (say very large) value will drag the mean to the
    right while it would not change the median
- The key question is *what makes sense*?
  + Your favorite pair has been added a +20% mark-up in August but you
    have a -20% discount as a regular customer. Is the price the same?
    + No, you actually saved 4% of the original price ($1.2\times.8 = .96$).
  + You drove half the way at 50mph and half of the way at 100mph. Did
    you drive on average at 75mph?
    + Obviously not...
  + Although you can compute the average of gains/loss, it is not at
    all what you would consider as the average gain.
  + May want to consider the geometric or the harmonic mean...  $$G =
    \sqrt[n]{\prod_{i=1}^N x_i} \text{ or } H = \frac{1}{\frac{1}{N}\sum_{i=1}^N
    \frac{1}{x_i}}$$
*** What should I look for?
- If the distribution is unimodal and symmetrical, then 
  #+BEGIN_CENTER
  mean =  mode = median\bigskip
  #+END_CENTER
- Depending on the problem, one or the other may be more
  relevant\bigskip
- Anyway, reporting such measure with no indication about variability
  is generally useless
** Dispersion: Variability around the central tendency
*** Variance
We expect most values to be "around" the mean

#+begin_src R :results output graphics :file pdf_babel/var_1.pdf :exports results :width 7 :height 3 :session
N = 1000;
df = rbind(data.frame(x=rnorm(N,mean=3,sd=1), set="A"),
           data.frame(x=rnorm(N,mean=3,sd=.1), set="B"),
           data.frame(x=rnorm(N,mean=3,sd=3), set="C"));
ggplot(df,aes(x=x,y=..density..)) + geom_histogram(color="black", fill="gray") + 
       facet_wrap(~set) + 
       geom_vline(xintercept=3,color="red",linetype = "longdash");
#+end_src

#+BEGIN_CENTER
  #+ATTR_LaTeX: :width .8\linewidth
  #+RESULTS:
  [[file:pdf_babel/var_1.pdf]]
#+END_CENTER

Departure from the mean:
- Mean absolute deviation: $\frac{1}{N} \sum_{i=1}^N |x_i-A|$
  - Rarely used
- *Variance*: $V = \frac{1}{N} \sum_{i=1}^N (x_i-A)^2$
  - only positive values and gives more importance to large
    deviations \smiley
  - not homogeneous to the mean (units) \frowny
- *Standard deviation*: $SD = \sqrt{V}$
*** Quantile
#+begin_src R :results output :session :exports both
quantile(T_price,c(.05,.25,.5,.75,.95))
#+end_src

#+RESULTS:
:     5%    25%    50%    75%    95% 
:  4.605  7.550  9.150 11.425 13.705

Inter-Quantile Range:
- *Inter-quartile range*: $IQR = Q_{75}-Q_{25}$
- But other values are possible, e.g., $Q_{95}-Q_{5}$
- *Range*: $\max - \min$ (may grow unbounded)
  - $\leadsto$ quite difficult to use
*** What about nominal or ordinal values?
There is for example the notion of *Entropy*: how many bits are required
to encode the sample?

Say there is a fraction $f_v$ of items with value $v$.

$$H = - \sum_{v\in V} f_v\log_2(f_v)$$

$-(x+y)\log_2(x+y)<-x\log_2(x)-y\log_2(y)$ so *the smaller the
entropy, the more condensed/predictable the sample distribution*
- $H([0,1,0,0])=0$
- $H([.25,.25,.25,.25])=2$
- $H([1/n, \dots, 1/n])=\log_2(n)$ so you generally normalize $H$ by
  $\log_2(n)$ \medskip

This notion can be *extended to numerical values* (but the computation
is complex as it depends on the binning...)

** Going further
*** Skewness
Remember the *mean* and the *variance*: 
- $A = \overline{x} = \frac{1}{N} \sum_{i=1}^N x_i$
- $V = \frac{1}{N} \sum_{i=1}^N (x_i-\overline{x})^2$

Could we measure the asymmetry of the samples around the mean?

- Proposal 1: $\frac{1}{N} \sum_{i=1}^N (x_i-\overline{x})$ \hfill (always 0... \frowny)
- Proposal 2: $\frac{1}{N} \sum_{i=1}^N (x_i-\overline{x})^3$ \hfill (not
  well normalized... \frowny)

$$S = \frac{\displaystyle\frac{1}{n} \sum_{i=1}^n
(x_i-\overline{x})^3}{\Bigg[\underbrace{\frac{1}{n} \sum_{i=1}^n
(x_i-\overline{x})^2}_{\text{variance}}\Bigg]^{3/2}}$$
*** Skewness
Could we illustrate this a bit? 
#+begin_src R :results output :session :exports both
library(moments)
skewness(runif(1000))
#+end_src

#+RESULTS:
: [1] 0.04626483

#+begin_src R :results output graphics :file pdf_babel/var_2.pdf :exports results :width 6 :height 4 :session
df_skew = function (x) {
  s=skewness(x);
  l=paste("Skewness = ",round(s,digits=3));
  data.frame(x=x,label=l);
}

df = rbind(df_skew(runif(1000,min=-3,max=3)),
           df_skew(rnorm(1000)),
           df_skew(rgamma(1000,shape=3)),
           df_skew(10-rgamma(1000,shape=3)));

ggplot(df,aes(x=x,y=..density..)) + theme_bw() +
    geom_histogram(fill="gray",color="black") + facet_wrap(~label);
#+end_src

#+BEGIN_CENTER
  #+ATTR_LaTeX: :width .8\linewidth
  #+RESULTS:
  [[file:pdf_babel/var_2.pdf]]
#+END_CENTER
*** Kurtosis
- peakedness (width of peak), tail weight, lack of shoulders...
- measure infrequent extreme deviations, as opposed to frequent
  modestly sized deviations

$$K = \frac{\tfrac{1}{n} \sum_{i=1}^n (x_i -
\overline{x})^4}{\Bigg[\underbrace{\tfrac{1}{n} \sum_{i=1}^n (x_i -
\overline{x})^2}_{\text{variance}}\Bigg]^2} - 3$$

The *-3* is here so that normal distribution have a Kurtosis of 0

#+begin_src R :results output :session :exports both
library(moments)
x = rnorm(1000) ; var(x);
kurtosis(x)-3
#+end_src

#+RESULTS:
: [1] 1.039743
: [1] 0.01825114

*** Kurtosis

#+begin_src R :results output graphics :file pdf_babel/var_3.pdf :exports results :width 6 :height 4 :session
df_kurtosis = function (x) {
  s=kurtosis(x)-3;
  l=paste("Kurtosis = ",round(s,digits=3));
  data.frame(x=x,label=l);
}

n=1000
df = rbind(df_kurtosis(runif(n,min=0,max=5)),
           df_kurtosis(rnorm(n)),
           df_kurtosis((2*floor(runif(n,min=0,max=2))-1)*rgamma(n,shape=5)),
           df_kurtosis((2*floor(runif(n,min=0,max=2))-1)*rgamma(n,shape=.4)));

ggplot(df,aes(x=x,y=..density..)) + theme_bw() +
    geom_histogram(fill="gray",color="black") + facet_wrap(~label);
#+end_src

#+BEGIN_CENTER
  #+ATTR_LaTeX: :width \linewidth
  #+RESULTS:
  [[file:pdf_babel/var_3.pdf]]
#+END_CENTER

** Summarizing a distribution
*** Classical information
#+begin_src R :results output :session :exports none
x = rgamma(100,shape=3)
dfx=data.frame(val=x);
#+end_src

#+RESULTS:

#+begin_src R :results output graphics :file pdf_babel/summary_1.pdf :exports results :width 6 :height 3 :session
gghist = function(x) {
  breaks=ceiling(log2(length(x)+1));
  bw = diff(range(x))/breaks;
  ggplot(data.frame(x=x),aes(x=x,y=..density..)) + theme_bw() +
      geom_histogram(fill="gray",color="black",binwidth=bw);
}
gghist(x);
#+end_src

#+RESULTS:
[[file:pdf_babel/summary_1.pdf]]

#+begin_src R :results output :session :exports both
summary(x)
var(x)
#+end_src

#+RESULTS:
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
:  0.4065  1.8430  2.5020  2.8660  3.6310  7.0220
: [1] 2.117541
*** Good and bad summaries

#+begin_src R :results output graphics :file pdf_babel/summary_2.pdf :exports results :width 6 :height 4 :session
dfx=rbind(data.frame(val=x,label="min/max"),
          data.frame(val=x,label="+/- sd"),
          data.frame(val=x,label="boxplot"),
          data.frame(val=x,label="confidence\ninterval"))

dfx$label = factor(dfx$label, 
    levels = c("min/max", "+/- sd", "boxplot", "confidence\ninterval"));

ggplot(data=dfx,aes(y=val, x=as.factor(label))) + theme_bw() + xlab("Method") + 
    geom_boxplot(data=dfx[dfx$label=="boxplot",],width =.3, color="dark green") + 
    geom_jitter(data=dfx,alpha=.2,position = position_jitter(width = .1)) +
    stat_summary(data=dfx[dfx$label=="boxplot",], fun.y="mean", geom = "point", shape=8, , color="dark green") +
    geom_pointrange(aes(x="min/max",y=mean(dfx$val),
                    ymin=min(dfx$val),ymax=max(dfx$val)), color="dark red") +
    geom_pointrange(aes(x="+/- sd",y=mean(dfx$val),
                    ymin=mean(dfx$val)-sd(dfx$val),ymax=mean(dfx$val)+sd(dfx$val)), color="dark red") +
    stat_summary(data=dfx[dfx$label=="confidence\ninterval",], fun.data="mean_cl_normal", geom = "errorbar", width=.1, , color="dark green") +
    stat_summary(data=dfx[dfx$label=="confidence\ninterval",], fun.y="mean", geom = "point", shape=21, , color="dark green")

#+end_src

#+BEGIN_CENTER
  #+ATTR_LaTeX: :width \linewidth
  #+RESULTS:
  [[file:pdf_babel/summary_2.pdf]]
#+END_CENTER

*** Be careful with fancy plots you do not fully understand!

#+BEGIN_EXPORT latex
\begin{center}
  \includegraphics<+>[height=6cm]{pdf_babel/set1_7.pdf}
  \includegraphics<+>[height=5cm]{pdf_babel/dist_summary1.pdf}
  \includegraphics<+>[height=5cm]{pdf_babel/dist_summary2.pdf}
\end{center}
#+END_EXPORT

**** 
#+BEGIN_QUOTE
The average human has one breast and one testicle\vspace{-1.5em}
#+END_QUOTE
#+LaTeX: \begin{flushright}
    -- Des McHale
#+LaTeX: \end{flushright}


