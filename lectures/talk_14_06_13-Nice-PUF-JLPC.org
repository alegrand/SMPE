#+TITLE:     Best Practices for Reproducible Research
#+AUTHOR:    Arnaud Legrand, Luka Stanisic
#+DATE: PUF/JLPC Summer School, Sophia, June 2014
#+startup: beamer
#+STARTUP: overview
#+STARTUP: indent
#+TAGS: noexport(n)
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [11pt,xcolor=dvipsnames,presentation]
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+LATEX_HEADER: \usedescriptionitemofwidthas{bl}
#+LATEX_HEADER: \usepackage[T1]{fontenc}
#+LATEX_HEADER: \usepackage[utf8]{inputenc}
#+LATEX_HEADER: \usepackage{ifthen,figlatex,amsmath,amstext,gensymb,amssymb}
#+LATEX_HEADER: \usepackage{boxedminipage,xspace,multicol}
#+LATEX_HEADER: \usetheme{Madrid}
#+LATEX_HEADER: \usecolortheme[named=BrickRed]{structure}
#+LATEX_HEADER: \setbeamertemplate{footline}[frame number]
#+LATEX_HEADER: \setbeamertemplate{navigation symbols}{}
#+LATEX_HEADER: \usepackage{verbments}
#+LATEX_HEADER: \usepackage{xcolor}
#+LATEX_HEADER: \usepackage{color}
#+LATEX_HEADER: \usepackage{url} \urlstyle{sf}
#+LATEX_HEADER: \usepackage[american]{babel}

#+LATEX_HEADER: \let\alert=\structure % to make sure the org * * works

#+LATEX_HEADER: \usepackage{pdfpages}
#+LATEX_HEADER: \makeatletter
#+LATEX_HEADER: \gdef\fsvtpage{\ps@navigation\refstepcounter{framenumber}}%
#+LATEX_HEADER: \makeatother
#+LATEX_HEADER: \setbeamercolor{background canvas}{bg=}



#+BEGIN_LaTeX
\definecolor{keywords}{RGB}{255,0,90}
\definecolor{comments}{RGB}{60,179,113}
\definecolor{fore}{RGB}{249,242,215}
\definecolor{back}{RGB}{51,51,51}
\newcommand{\accolade}[1]{$\left\{\begin{array}{c}\vspace{#1}\end{array}\right.$}
%\lstset{
%  basicstyle=\color{fore},
%  keywordstyle=\color{keywords},
%  commentstyle=\color{comments},
%  backgroundcolor=\color{back}
%}
#+END_LaTeX

#+BEGIN_LaTeX
\newcommand{\restorefootline}{\setbeamertemplate{navigation symbols}{}}
\newcommand{\setfootline}[1]{\setbeamertemplate{navigation symbols}{\textcolor{black}{\textbf{#1}}}}
\newcommand{\includeslides}[3]{%
  \setfootline{#1}%
  \includepdf[pages={#2},pagecommand={\fsvtpage},turn=false,noautoscale=false,column=false,columnstrict=false,openright=false]{pdf_sources/#3}%
%  \includepdf[pages={#2},pagecommand={\fsvtpage},scale=.8,offset=20
%  -23,turn=false,noautoscale=false,column=false,columnstrict=false,openright=false]{pdf_sources/#3}%
  \restorefootline%
}
\newcommand{\includeslidesJF}[1]{%
  \includeslides{Courtesy of Juliana Freire (AMP Workshop on
    Reproducible research)}{#1}{2011-amp-reproducible-research.pdf}
}

\newcommand{\includeslidesAD}[1]{%
  \includeslides{Courtesy of Andrew Davison (AMP Workshop on
    Reproducible research)}{#1}{sumatra_amp2011.pdf}
}

\frame<handout:0>
{
  \frametitle{Outline}
  \tableofcontents
}

\makeatletter
\AtBeginSubsection[]
{
  \frame<handout:0>
  {
    \frametitle{Outline}
    \tableofcontents[current,currentsubsection]
  }
}
\makeatother
#+END_LaTeX

* Useful links                                                     :noexport:
** Kameleon
[[file:~/Work/SimGrid/simgrid-vm/kameleon/]]
- [[file:~/org/journal.org::*Playing%20with%20Kameleon][Playing with Kameleon]]
- [[file:~/Work/SimGrid/simgrid-vm/kameleon/recipes/debian_test.yaml::release:%20testing][recipe]]
- [[file:~/Work/SimGrid/simgrid-vm/kameleon/recipes/steps/install_Rstuff.yaml::su%20$$user_name][install_Rstuff.yaml]]
* Reproducible Research
** Looks familiar?
*** As a Reviewer
This may be an interesting contribution but:
- This *average value* must hide something
- As usual, there is no *confidence interval*, I wonder about the
  variability and whether the difference is *significant* or not
- That can't be true, I'm sure they *removed some points*
- Why is this graph in *logscale*? How would it look like otherwise?
- The authors decided to show only a *subset of the data*. I wonder
  what the rest looks like
- There is no label/legend/... What is the *meaning of this graph*?
  If only I could access the generation script
*** As an Author
- I thought I used the same parameters but *I'm getting different
  results!*
- The new student wants to compare with *the method I proposed last
  year*
- My advisor asked me whether I took care of setting this or this but
  I can't remember
- The damned fourth reviewer asked for a major revision and wants me
  to *change figure 3* :(
- *Which code* and *which data set* did I use to generate this figure?
- It *worked yesterday*!
- 6 months later: *why* did I do that?
*** My Feeling
Computer scientists have an incredibly *poor training in
probabilities, statistics, experimental management*
  
\medskip

Why should we? Computer are *deterministic* machines after all, right?
;)

\medskip

Ten years ago, I've started realizing how *lame* the articles I
reviewed (as well as those I wrote) were in term of experimental
methodology.
+ Yeah, I know, your method/algorithm is better than the others as
  demonstrated by the figures
+ Not enough information to *discriminate real effects from noise*
+ Little information about the *workload*
+ Would the ``conclusion'' still hold with a slightly different
  workload?
+ I'm tired of awful combination of tools (perl, gnuplot, sql, ...)
  and *bad methodology*
*** Current practice in CS
\small
Computer scientists tend to either:
- vary *one factor at a time*, use a very fine sampling of the
  parameter range,
- *run millions of experiments* for a week varying a lot of
  parameters and then try to get something of it. Most of the time,
  they (1) don’t know how to analyze the results (2) realize
  something went wrong...
#+BEGIN_LaTeX
\vspace{-1em}
\centerline{\begin{minipage}{.7\linewidth}
  \begin{block}{}Interestingly, most other scientists do \structure{the exact
  opposite}.
  \end{block}
\end{minipage}}
\vspace{.5em}
#+END_LaTeX

These two flaws come from poor training and from the fact that C.S.
experiments are *almost* free and very fast to conduct
- Most strategies of experimentation (DoE) have been designed to
  *provide sound answers despite* all the *randomness and
  uncontrollable factors*
- *Maximize the amount of information* provided by a given set of
  experiments
- *Reduce* as much as possible *the number of experiments* to perform
  to answer a given question under a given level of confidence
**** 
#+BEGIN_CENTER
Takes a few lectures on *Design of Experiments* to improve but anyone
can start by reading *Jain's book on The Art of Computer Systems
Performance Analysis*
#+END_CENTER
\normalsize

*** Is CS Concerned Really With This?
\small
*Yes*, although designed and built by human beings, computers are *so
complex* that mistakes are easy to do...

#+LaTeX: \begin{overlayarea}{1.07\linewidth}{1cm}\hspace{-.042\linewidth}\begin{minipage}{\linewidth}
- T. Mytkowicz, A. Diwan, M. Hauswirth, and P. F. Sweeney. *[[http://doi.acm.org/10.1145/1508284.1508275][Producing wrong data without doing anything obviously wrong]]!*. SIGPLAN Not. 44(3), March 2009
#+LaTeX: \end{minipage}\end{overlayarea}

#+BEGIN_LaTeX
\begin{overlayarea}{\linewidth}{4.4cm}
\begin{center}
\includegraphics<+>[width=.6\linewidth]{fig/asplos09-producing-data_fig1.pdf}%
\includegraphics<+->[width=.6\linewidth]{fig/asplos09-producing-data_fig2.pdf}%
\end{center}
\end{overlayarea}
#+END_LaTeX
**** Key principles of experiment design
- *Randomize* to *reduce bias*
- *Replicate* to *increase reliability*
** 
\includeslidesJF{2-7}
# \includeslidesJF{11-14}
# \includeslidesMG{26}

*** A few Words on Scientific Foundation                          :noexport:
- *Falsifiability* or *refutability* of a statement, hypothesis, or
  theory is an inherent possibility to prove it to be false (not
  "/commit fraud/" but "/prove to be false/").
- Karl Popper makes falsifiability the demarcation criterion to
  *distinguish the scientific from the unscientific*

  #+BEGIN_QUOTE
  It is not only not right, it is not even wrong!

  -- Wolfgang Pauli
  #+END_QUOTE
- Theories cannot be proved correct but they can be disproved. Only a
  few stand the test of batteries of *critical experiments*.
- It is not all black and white. There are many stories where
  scientists stick with their theories despite evidences and
  sometimes, they were even right to do so...
#+BEGIN_CENTER
  *Testing and checking is thus one of the basis of science*
#+END_CENTER

Further readings: *A Summary of Scientific Method*, Peter Kosso,
Springer
*** Why Are Scientific Studies so Difficult to Reproduce?
#+LaTeX: \begin{overlayarea}{\linewidth}{7.6cm}\null\vspace{1cm}
- Publication/Experimental *bias*
- Rewards for *positive results*
- Programming *errors* or data manipulation *mistakes*
- Poorly selected statistical tests
- Multiple testing, multiple looks at the data, multiple
  statistical analyses
- +*Lack of easy-to-use tools*+

#+LaTeX: \end{overlayarea} \begin{flushright}\scriptsize Courtesy of Adam J. Richards\end{flushright}
*** Reproducibility: What Are We Talking About?
#+BEGIN_LaTeX
\vspace{-.6em}
\begin{overlayarea}{\linewidth}{9cm}
\hbox{\hspace{-.05\linewidth}\includegraphics[page=5,width=1.1\linewidth]{pdf_sources/sumatra_amp2011.pdf}}

\vspace{-2cm}
\begin{flushright}
  {\scriptsize Courtesy of Andrew Davison (AMP Workshop on Reproducible research)}
\end{flushright}
\end{overlayarea}
#+END_LaTeX
*** Evidence for a Lack of Reproducibility                       :noexport:
#+LaTeX: \begin{overlayarea}{\linewidth}{7.6cm}\null\vspace{.6cm}
- Studies showing that scientific papers commonly *leave out
  experimental details essential for reproduction* and showing
  *difficulties with replicating published experimental results*:
  + J.P. Ioannidis. /[[http://www.plosmedicine.org/article/info:doi/10.1371/journal.pmed.0020124][Why Most Published Research Findings Are False]]/ PLoS
    Med. 2005 August; 2(8)
- High number of *failing clinical trials*.
  + /[[http://mescal.imag.fr/membres/arnaud.legrand/teaching/2011/EP_epidemiology.pdf][Do We Really Know What Makes Us Healthy?]]/, New-York Times —
    September 16, 2007
  + /[[http://mescal.imag.fr/membres/arnaud.legrand/teaching/2011/EP_lies.pdf][Lies, Damned Lies, and Medical Science]]/, The Atlantic. 2010, Nov.
- Increase in *retracted papers*:
  + Steen RG, /[[http://dx.doi.org/10.1136/jme.2010.040923][Retractions in the scientific literature: is the
    incidence of research fraud increasing?]]/ J Med Ethics 37:
    249–253.
#+LaTeX: \end{overlayarea} \begin{flushright}\scriptsize Courtesy of Adam J. Richards\end{flushright}
*** Why Bother Making Our Work Reproducible?                     :noexport:
#+LaTeX: \begin{overlayarea}{\linewidth}{7.6cm}\null\vspace{-.6cm}
*[[http://www.nytimes.com/2011/07/08/health/research/08genes.html][The Duke University scandal with scientific misconduct on lung
cancer]]*

\small
- /Nature Medicine/ - 12, 1294 - 1300 (2006) *Genomic signatures to
  guide the use of chemotherapeutics*, by
  #+LaTeX: \bgroup\scriptsize
  Anil Potti and 16 other researchers from Duke University and
  University of South Florida
  #+LaTeX: \egroup
- Major commercial labs licensed it and were about to start using it
  before two statisticians discovered and publicized its faults
  #+BEGIN_LaTeX
  \begin{block}{}\scriptsize
  Dr. Baggerly and Dr. Coombes found errors almost immediately. Some seemed careless — moving a row or a column over by one in a giant spreadsheet — while others seemed inexplicable. The Duke team shrugged them off as “clerical errors.”
  \end{block}

  \begin{block}{}\scriptsize
  The Duke researchers continued to publish papers on their genomic signatures in prestigious journals. Meanwhile, they started three trials using the work to decide which drugs to give patients.
  \end{block}
  #+END_LaTeX
- Retracted: 07 January 2011. [[http://en.wikipedia.org/wiki/Anil_Potti][Ten papers that Potti coauthored in
  prestigious journals were retracted for varying reasons]]
- Some people die and may be getting worthless information that is
  based on *bad science*
#+LaTeX: \end{overlayarea} \begin{flushright}\scriptsize Courtesy of Adam J. Richards\end{flushright}
*** Reproducible Research: Trying to Bridge the Gap
#+BEGIN_LaTeX
\begin{center}
  \includegraphics<1>[width=\linewidth,subfig=1]{fig/author_reader_rr.fig}%
  \includegraphics<2>[width=\linewidth,subfig=2]{fig/author_reader_rr.fig}%
  \includegraphics<3>[width=\linewidth,subfig=3]{fig/author_reader_rr.fig}%
\end{center}
\vspace{-.7cm}
\begin{flushright}
{\scriptsize {\textbf{Courtesy of Roger D. Peng (Coursera lecture on reproducible research, May 2014)}}}
\end{flushright}
#+END_LaTeX
*** A Difficult Trade-off
**** Automatically keeping track of everything
- the code that was run (source code, libraries, compilation
  procedure)
- processor architecture, OS, machine, date, ...
#+LaTeX: \vspace{-\baselineskip}
#+BEGIN_CENTER
*VM-based solutions* and *experiment engines*
#+END_CENTER
**** Ensuring others can redo/understand what you did
- Why did I run this?
- Does it still work when I change this piece of code for this one?
#+LaTeX: \vspace{-\baselineskip}
#+BEGIN_CENTER
*Laboratory notebook* and *recipes*
#+END_CENTER
*** Reproducible Research: the New Buzzword?
**** H2020-EINFRA-2014-2015
#+BEGIN_QUOTE
A key element will be capacity building to link literature and data in
order to enable a more transparent evaluation of research and
*reproducibility* of results.
#+END_QUOTE
**** More and more workshops
#+LaTeX: \scriptsize
- [[http://www.eecg.toronto.edu/~enright/wddd/][Workshop on Duplicating, Deconstructing and Debunking (WDDD)]] ([[http://cag.engr.uconn.edu/isca2014/workshop_tutorial.html][2014 edition]])
- \normalsize *[[http://www.stodden.net/AMP2011/][Reproducible Research: Tools and Strategies for Scientific
  Computing]]* \scriptsize(2011)
- [[http://wssspe.researchcomputing.org.uk/][Working towards Sustainable Software for Science: Practice and
  Experiences]] (2013)
- *[[http://hunoldscience.net/conf/reppar14/pc.html][REPPAR'14: 1st International Workshop on Reproducibility in
  Parallel Computing]]*
- [[https://www.xsede.org/web/reproducibility][Reproducibility@XSEDE: An XSEDE14 Workshop]]
- [[http://www.occamportal.org/reproduce][Reproduce/HPCA 2014]]
  #+LaTeX: \item \href{http://www.ctuning.org/cm/wiki/index.php?title\%3DEvents:TRUST2014}{TRUST 2014}
# - [[http://www.ctuning.org/cm/wiki/index.php?title%3DEvents:TRUST2014][TRUST 2014]]
\normalsize 
Should be seen as opportunities to share experience.
** A few Tools for Experiment Setup and Management
*** Many Alternative Tools Exist
- Naive way: sh + ssh + ... \medskip
  #+BEGIN_LaTeX
  \item \alert<1>{Expo} (2007-, G5K)
  \item \alert<1>{XPflow} (2012-, G5K)
  \begin{overlayarea}{3cm}{0cm}
  \vspace{-2.5\baselineskip}
  $\left\}\begin{array}{l}
   \text{\phantom{X}}\\\text{\phantom{X}}\\\text{\phantom{X}}
   \end{array}\right.\hspace{-.7cm}
   \begin{array}{l}
   \text{although nothing} \\ \text{specific to G5K}
   \end{array}$
  \end{overlayarea}
  \item \alert<1>{Execo} (2013-, G5K) \medskip
  #+END_LaTeX
- Plush (2006-, PlanetLab)
- OMF (2009-, Wireless testbeds and Planetlab)
- Splay (2008, distributed algorithm comparison)
- ...

They differ in the underlying paradigms and the platforms for which
they have been designed

- *A taxonomy of experiment management tools for distributed
  systems*, T. Buchert, C. Ruiz , L. Nussbaum, O. Richard, FGCS, 2014
*** Expo                                                         :noexport:
- Grenoble (B. Videau, C. Ruis, O. Richard) \hfill
  http://expo.gforge.inria.fr/
- *DSL* (Domain Specific Language) derived from *Ruby* and adapted to
  the management of experiment (based on *taktuk*, i.e., sh + ssh)
- At the moment Expo interacts with *Planetlab* and *Grid5000* testbeds
- Resource and task abstractions, client-server organization,
  *interactive* or *batch* mode
- *Native logging and archiving capabilities* 
  + every action performed on tasks, error flows, dates, ...
  + lets you know *what* was run, *when*, *where* and *how*
  #+LaTeX:\scriptsize
  #+BEGIN_SRC 
reserv=ExpoEngine::new(@connection)
reserv.site=["bordeaux","lille","luxembourg","nancy","sophia"]
reserv.resources=["nodes=50","nodes=10","nodes=4","nodes=4","nodes=30"]
reserv.name = "Expo Scalability"
reserv.walltime=600

reserv.run!
ptask $all, "hostname"
reserv.stop!
  #+END_SRC
*** XPflow                                                       :noexport:
- Nancy (T. Buchert, L. Nussbaum)\hfill http://xpflow.gforge.inria.fr/
- *DSL* (Domain Specific Language) derived from *Ruby* and adapted to
  the management of experiment
- Resources, process, and activities 
- Top-down rather than bottom-up: *business process management*
- Cope with *failures* through *snapshots* and retry *policy*
#+BEGIN_LaTeX
\vspace{-.3em}
\begin{overlayarea}{\linewidth}{5cm}
\begin{center}
%\fbox{
   \includegraphics<+>[page=46,width=.9\linewidth,clip=true,bb=0 0 350 210 ]{./pdf_sources/xpflow_slides.pdf}%
   \includegraphics<+>[page=47,width=.9\linewidth,clip=true,bb=0 0 350 210 ]{./pdf_sources/xpflow_slides.pdf}%
   \includegraphics<+>[page=48,width=.9\linewidth,clip=true,bb=0 0 350 210 ]{./pdf_sources/xpflow_slides.pdf}%
   \includegraphics<+>[page=49,width=.9\linewidth,clip=true,bb=0 0 350 210 ]{./pdf_sources/xpflow_slides.pdf}%
   \includegraphics<+>[page=50,width=.9\linewidth,clip=true,bb=0 0 350 210 ]{./pdf_sources/xpflow_slides.pdf}%
   \includegraphics<+>[page=51,width=.9\linewidth,clip=true,bb=0 0 350 210 ]{./pdf_sources/xpflow_slides.pdf}%
%}
\end{center}
\vspace{-2.7cm}
\begin{flushright}
  {\scriptsize {\textbf{Courtesy of T. Buchert\qquad\null}}}
\end{flushright}
\end{overlayarea}
#+END_LaTeX 
*** Execo                                                        :noexport:
- Lyon (M. Imbert, L. Pouilloux)\hfill http://execo.gforge.inria.fr/
- *Python*-based API, script-oriented, fork+sh+ssh or taktuk
- *Process*: start/wait/kill, error/exit_code, stdout/stderr
- Heavy use of inheritence:
  + Process $\leadsto$ SshProcess
  + Engine $\leadsto$ g5k_cluster_engine/openstack_engine/vm5k
*** Kameleon
- Grenoble (C. Ruiz, S. Harrache, M. Mercier, O. Richard, ...)\\\hfill
  http://kameleon.readthedocs.org/
- Generate customized *appliances* (kvm, LXC, Virtualbox, iso, ...)
- Ruby-based, *YAML* description of *recipes* with *steps* and
  *aliases*, execution in *contexts*
- Automatically *checkpoints* to rebuild only what is required
- Relies on "under development" tools (e.g., qemu-nbd) but I managed
  to setup working VMs for yesterday without much trouble

#+BEGIN_CENTER
  Providing *not only VMs* but also *recipe* is *good*!
#+END_CENTER
** Many Different Alternatives for Reproducible Analysis
*** Vistrails: a Workflow Engine for Provenance Tracking
#+BEGIN_LaTeX
\vspace{-.6em}
\begin{overlayarea}{\linewidth}{9cm}
\hbox{\hspace{-.05\linewidth}%
\includegraphics<+>[page=14,width=1.1\linewidth]{pdf_sources/2011-amp-reproducible-research.pdf}%
\includegraphics<+>[page=15,width=1.1\linewidth]{pdf_sources/2011-amp-reproducible-research.pdf}%
}

\vspace{-2cm}
\begin{flushright}
  {\scriptsize Courtesy of Juliana Freire (AMP Workshop on
    Reproducible research)}
\end{flushright}
\end{overlayarea}
#+END_LaTeX
*** VCR: A Universal Identifier for Computational Results
#+BEGIN_LaTeX
\vspace{-.6em}
\begin{overlayarea}{\linewidth}{9cm}
\hbox{\hspace{-.05\linewidth}%
\includegraphics<+>[page=76,width=1.1\linewidth]{pdf_sources/amp-ver1MATAN.pdf}%
\includegraphics<+>[page=78,width=1.1\linewidth]{pdf_sources/amp-ver1MATAN.pdf}%
\includegraphics<+>[page=113,width=1.1\linewidth]{pdf_sources/amp-ver1MATAN.pdf}%
\includegraphics<+>[page=26,width=1.1\linewidth]{pdf_sources/amp-ver1MATAN.pdf}%
}

\vspace{-2cm}
\begin{flushright}
  {\scriptsize Courtesy of Matan Gavish and David Donoho (AMP Workshop on
    Reproducible research)}
\end{flushright}
\end{overlayarea}
#+END_LaTeX 
*** Sumatra: a lab notebook
#+BEGIN_LaTeX
\vspace{-.6em}
\begin{overlayarea}{\linewidth}{9cm}
\hbox{\hspace{-.05\linewidth}%
\includegraphics<+>[page=35,width=1.1\linewidth]{pdf_sources/sumatra_amp2011.pdf}%
\includegraphics<+>[page=39,width=1.1\linewidth]{pdf_sources/sumatra_amp2011.pdf}%
\includegraphics<+>[page=40,width=1.1\linewidth]{pdf_sources/sumatra_amp2011.pdf}%
\includegraphics<+>[page=46,width=1.1\linewidth]{pdf_sources/sumatra_amp2011.pdf}%
}

\vspace{-2cm}
\begin{flushright}
  {\scriptsize Courtesy of Andrew Davison (AMP Workshop on
    Reproducible research)}
\end{flushright}
\end{overlayarea}
#+END_LaTeX
*** So many new tools
#+BEGIN_LaTeX
\vspace{-.6em}
\begin{overlayarea}{\linewidth}{9cm}
\hbox{\hspace{-.05\linewidth}%
\includegraphics[page=13,width=1.1\linewidth]{pdf_sources/DavisFeb132014-STODDEN.pdf}%
}
\vspace{-1.5cm}
\begin{flushright}
  {\scriptsize {\textbf{Courtesy of Victoria Stodden (UC Davis, Feb 13, 2014)}}}
\end{flushright}
\vspace{.8cm}
And also: \textbf{Figshare}, \textbf{ActivePapers}, \textbf{Elsevier executable paper}, ...
\end{overlayarea}
#+END_LaTeX 
*** Sharing Data
#+LaTeX: \begin{overlayarea}{\linewidth}{7.6cm}\null\vspace{-.6cm}
#+LaTeX: \begin{block}{What kinds of systems are available?}
- "Good" - The cloud (Dropbox, Google Drive, *Figshare*)
- *Better* - Version control systems (SVN, *Git* and Mercurial)
- "Best" - Version control systems on the cloud (GitHub, Bitbucket)

It depends on the level of privacy you want but you should already
know this tools. 
#+LaTeX: \hfill\textbf{\bf Few handle GB files}...\hfill\null
#+LaTeX: \end{block}\begin{block}{Is this enough?}
1. Use a workflow that *documents both data and process*
2. Use the machine readable *CSV format*
3. Provide *raw* data and *meta* data, not just statistical outputs
4. *Never* do data manipulation and statistical tests *by hand*
5. *Use R*, Python or another free software to read and process raw
   data (*ideally* to *produce complete reports* with code, results
   and prose)
#+LaTeX: \end{block}

#+LaTeX: \end{overlayarea} \begin{flushright}\scriptsize Courtesy of Adam J. Richards\end{flushright}
*** Literate Programming
\small
*Donald Knuth*: explanation of the program logic in a *natural language*
*interspersed with snippets of* macros and traditional *source code*.

#+BEGIN_CENTER
I'm way too =3l33t= to program this way but that's \\
*exactly what we need for writing a reproducible article/analysis!*
#+END_CENTER
#+LaTeX: \vspace{-.5em}

**** Org-mode (requires emacs)
My favorite tool.
- plain text, very smooth, works both for html, pdf, ...
- allows to combine all my favorite languages even with sessions
**** Ipython notebook
If you are a python user, go for it! Web app, easy to use/setup...
**** KnitR (a.k.a. Sweave)
For non-emacs users and as a first step toward /reproducible papers/:
- Click and play with a modern IDE (e.g., Rstudio)
* R Crash Course
** General Introduction
*** Why R?
R is a great language for data analysis and statistics
- Open-source and multi-platform
- Very expressive with high-level constructs
- Excellent graphics
- Widely used in academia and business
- Very active community
  + Documentation, FAQ on http://stackoverflow.com/questions/tagged/r
- Great integration with other tools
*** Why is R a pain for computer scientists?
- R is *not* really a *programming* language
- Documentation is for statisticians
- Default plots are +cumbersome+ (meaningful)
- Summaries are +cryptic+ (precise)
- *Steep learning curve* even for us, computer scientists whereas we
  generally switch seamlessly from a language to another!  That's
  frustrating! ;)
*** Do's and dont's
+R is high level, I'll do everything myself+
- CTAN comprises 4,334 TeX, LaTeX, and related packages and
  tools. Most of you do not use plain TeX.
- Currently, the CRAN package repository features 4,030 available
  packages.
- How do you know which one to use??? Many of them are highly
  exotic (not to say useless to you).
  #+BEGIN_CENTER
  I learnt with http://www.r-bloggers.com/
  #+END_CENTER
	

- Lots of introductions but not necessarily what you're looking
  for so *I'll give you a short tour*. 

  You should quickly realize though that you need proper training
  in statistics and data analysis if you do not want tell
  nonsense.

- Again, you should read *Jain's book on The Art of Computer Systems
  Performance Analysis*

- You may want to *follow online courses*:
  + https://www.coursera.org/course/compdata
  + https://www.coursera.org/course/repdata
*** Install and run R on debian
\small
#+begin_src sh
apt-cache search r
#+end_src
Err, that's not very useful :) It's the same when searching on
google but once the filter bubble is set up, it gets better...
#+begin_src sh
sudo apt-get install r-base
#+end_src

#+BEGIN_SRC sh :results output :exports both :session
R
#+END_SRC
\scriptsize
#+RESULTS:
#+begin_example
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.
> 
#+end_example

*** Install a few cool packages
R has it's own package management mechanism so just run R and type the
following commands:
- =ddply=, =reshape= and =ggplot2= by Hadley Wickham (http://had.co.nz/)
  #+begin_src R
  install.packages("plyr")
  install.packages("reshape")
  install.packages("ggplot2")
  #+end_src
- =knitR= by (Yihui Xie) http://yihui.name/knitr/
  #+begin_src R
  install.packages("knitr")
  #+end_src
*** IDE
Using R interactively is nice but quickly becomes painful so at some
point, you'll want an IDE.

\medskip

Emacs is great but you'll need /Emacs Speaks Statistics/
#+begin_src sh
sudo apt-get install ess
#+end_src
\medskip

#+BEGIN_CENTER
In this tutorial, I will briefly show you *rstudio*
(https://www.rstudio.com/) and later how to use =org-mode=
#+END_CENTER
** Reproducible Documents: knitR
*** Rstudio screenshot
#+BEGIN_LaTeX
\vspace{-.5cm}
\begin{center}
  \includegraphics[height=9cm]{./images/rstudio_shot.png}
\end{center}
#+END_LaTeX
*** Reproducible analysis in Markdown + R
- Create a new *R Markdown* document (Rmd) in rstudio
- R chunks are interspersed with =```{r}= and =```=
- Inline R code: =`r sin(2+2)`=
- You can *knit* the document and share it via *rpubs*
- R chunks can be sent to the top-level with =Alt-Ctrl-c=
- I usually work mostly with the current environment and only knit in
  the end
- Other engines can be used (use rstudio *completion*)
  #+BEGIN_SRC 
  ```{r engine='sh'}
  ls /tmp/
  ```
  #+END_SRC
- Makes *reproducible analysis as simple as one click*
- Great tool for quick analysis for self and colleagues, homeworks, ...
*** Reproducible articles with LaTeX + R
- Create a new *R Sweave* document (Rnw) in rstudio
- R chunks are interspersed with 
  #+LaTeX: \texttt{<\null<>\null>=} 
  and =@=
- You can *knit* the document to produce a pdf
- You'll probably quickly want to *change default behavior* (activate
  the cache, hide code, ...). In the preembule:
  #+BEGIN_EXAMPLE
  <<echo=FALSE>>=
  opts_chunk$set(cache=TRUE,dpi=300,echo=FALSE,fig.width=7,
                  warning=FALSE,message=FALSE)
  @
  #+END_EXAMPLE
- Great for journal articles, theses, books, ...
** Introduction to R
*** Data frames
\small
#+begin_src R :results output :session :exports none
library(ggplot2)
library(plyr)
#+end_src
A data frame is a data tables (with columns and rows). =mtcars= is a
built-in data frame that we will use in the sequel
#+BEGIN_SRC R :results output :exports both :session
head(mtcars);
#+END_SRC

#+RESULTS:
:                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
: Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
: Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
: Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
: Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
: Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
: Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1

You can also load a data frame from a CSV file:
#+BEGIN_SRC R :results output :exports both :session
df <- read.csv("http://foo.org/mydata.csv", header=T, 
               strip.white=TRUE);
#+END_SRC
You will *get help* by using =?=:
#+BEGIN_SRC :results output :exports both :session
?data.frame
?rbind
?cbind
#+END_SRC
*** Exploring Content (1)
\small
#+BEGIN_SRC R :results output :exports both :session
names(mtcars);
#+END_SRC

#+RESULTS:
:  [1] "mpg"  "cyl"  "disp" "hp"   "drat" "wt"   "qsec" "vs"   "am"   "gear"
: [11] "carb"

#+BEGIN_SRC R :results output :exports both :session
str(mtcars);
#+END_SRC

#+RESULTS:
#+begin_example
'data.frame':	32 obs. of  11 variables:
 $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...
 $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...
 $ disp: num  160 160 108 258 360 ...
 $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...
 $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...
 $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...
 $ qsec: num  16.5 17 18.6 19.4 17 ...
 $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...
 $ am  : num  1 1 1 0 0 0 0 0 0 0 ...
 $ gear: num  4 4 4 3 3 3 3 4 4 4 ...
 $ carb: num  4 4 1 1 2 1 4 2 2 4 ...
#+end_example
*** Exploring Content (2)
\small
#+BEGIN_SRC R :results output :exports both :session
dim(mtcars);
length(mtcars);
#+END_SRC

#+RESULTS:
: [1] 32 11
: [1] 11

#+BEGIN_SRC R :results output :exports both :session
summary(mtcars);
#+END_SRC

#+RESULTS:
#+begin_example
      mpg             cyl             disp             hp       
 Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  
 1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  
 Median :19.20   Median :6.000   Median :196.3   Median :123.0  
 Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  
 3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  
 Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  
      drat             wt             qsec             vs        
 Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  
 1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  
 Median :3.695   Median :3.325   Median :17.71   Median :0.0000  
 Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  
 3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  
 Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  
       am              gear            carb      
 Min.   :0.0000   Min.   :3.000   Min.   :1.000  
 1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000  
 Median :0.0000   Median :4.000   Median :2.000  
 Mean   :0.4062   Mean   :3.688   Mean   :2.812  
 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000  
 Max.   :1.0000   Max.   :5.000   Max.   :8.000
#+end_example
*** Exploring Content (3)
\small
#+BEGIN_SRC R :results output graphics :file ./mtcars_plot.pdf :exports both :session
plot(mtcars[names(mtcars) %in% c("cyl","wt","disp","qsec","gear")]);
#+END_SRC

#+ATTR_LaTeX: :width .6\linewidth
#+RESULTS:
[[file:./mtcars_plot.pdf]]

*** Accessing Content
\small
#+BEGIN_SRC R :results output :exports both :session
mtcars$mpg
#+END_SRC

#+RESULTS:
:  [1] 21.0 21.0 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 17.8 16.4 17.3 15.2 10.4
: [16] 10.4 14.7 32.4 30.4 33.9 21.5 15.5 15.2 13.3 19.2 27.3 26.0 30.4 15.8 19.7
: [31] 15.0 21.4

#+BEGIN_SRC R :results output :exports both :session
mtcars[2:5,]$mpg
#+END_SRC

#+RESULTS:
: [1] 21.0 22.8 21.4 18.7

#+BEGIN_SRC R :results output :exports both :session
mtcars[mtcars$mpg == 21.0,]
#+END_SRC

#+RESULTS:
:               mpg cyl disp  hp drat    wt  qsec vs am gear carb
: Mazda RX4      21   6  160 110  3.9 2.620 16.46  0  1    4    4
: Mazda RX4 Wag  21   6  160 110  3.9 2.875 17.02  0  1    4    4

#+BEGIN_SRC R :results output :exports both :session
mtcars[mtcars$mpg == 21.0 & mtcars$wt > 2.7,]
#+END_SRC

#+RESULTS:
:               mpg cyl disp  hp drat    wt  qsec vs am gear carb
: Mazda RX4 Wag  21   6  160 110  3.9 2.875 17.02  0  1    4    4
*** Extending Content
\small
#+BEGIN_SRC R :results output :exports both :session
mtcars$cost = log(mtcars$hp)*atan(mtcars$disp)/
                 sqrt(mtcars$gear**5);
mean(mtcars$cost);
summary(mtcars$cost);
#+END_SRC

#+RESULTS:
: [1] 0.345994
:    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
:  0.1261  0.2038  0.2353  0.3460  0.5202  0.5534

#+BEGIN_SRC R :results output graphics :file ./mtcars_hist.pdf :exports both :session
hist(mtcars$cost,breaks=20);
#+END_SRC

#+ATTR_LaTeX: :height 4.5cm
#+RESULTS:
[[file:./mtcars_hist.pdf]]

** Needful Packages by Hadley Wickam
*** plyr: the Split-Apply-Combine Strategy 
Have a look at http://plyr.had.co.nz/09-user/ for a more detailed
introduction.
#+BEGIN_CENTER
 #+ATTR_LaTeX: :height 6cm
 [[./images/split-apply-combine.png]]
#+END_CENTER
*** plyr: Powerfull One-liners
\small
#+BEGIN_SRC R :results output :exports both :session
library(plyr)
mtcars_summarized = ddply(mtcars,c("cyl","carb"), summarize, 
      num = length(wt), wt_mean = mean(wt), wt_sd = sd(wt),
      qsec_mean = mean(qsec), qsec_sd = sd(qsec));
mtcars_summarized
#+END_SRC

#+RESULTS:
#+begin_example
  cyl carb num  wt_mean     wt_sd qsec_mean   qsec_sd
1   4    1   5 2.151000 0.2627118  19.37800 0.6121029
2   4    2   6 2.398000 0.7485412  18.93667 2.2924368
3   6    1   2 3.337500 0.1732412  19.83000 0.5515433
4   6    4   4 3.093750 0.4131460  17.67000 1.1249296
5   6    6   1 2.770000        NA  15.50000        NA
6   8    2   4 3.560000 0.1939502  17.06000 0.1783255
7   8    3   3 3.860000 0.1835756  17.66667 0.3055050
8   8    4   6 4.433167 1.0171431  16.49500 1.4424112
9   8    8   1 3.570000        NA  14.60000        NA
#+end_example
If your data is not in the right form *give a try to =reshapeP/melt=*.

#+BEGIN_CENTER
  #+LaTeX: {\bf plyr next generation = dplyr}
#+END_CENTER
*** ggplot2: Modularity in Action
- =ggplot2= builds on plyr and on a modular *grammar of graphics*
- +obnoxious function with dozens of arguments+
- *combine* small functions using layers and transformations
- *aesthetic* mapping between *observation characteristics* (data frame column
  names) and *graphical* object *variables*
- an incredible *documentation*: http://docs.ggplot2.org/current/
  #+BEGIN_CENTER
  #+ATTR_LaTeX: :height 6cm
  [[./images/ggplot2_doc.png]]
  #+END_CENTER
*** ggplot2: Illustration (1)
\small
#+BEGIN_SRC R :results output graphics :file ./mtcars_ggplot1.pdf :width 5.5 :height 4 :exports  both :session
ggplot(data = mtcars, aes(x=wt, y=qsec, color=cyl)) +  
       geom_point();
#+END_SRC

#+BEGIN_CENTER
#+ATTR_LaTeX: :height 6cm 
#+RESULTS:
[[file:./mtcars_ggplot1.pdf]]
#+END_CENTER
*** ggplot2: Illustration (2)
\small
#+BEGIN_SRC R :results output graphics :file ./mtcars_ggplot2.pdf :width 5.5 :height 4 :exports  both :session
ggplot(data = mtcars, aes(x=wt, y=qsec, color=factor(cyl))) +  
       geom_point();
#+END_SRC

#+BEGIN_CENTER
#+ATTR_LaTeX: :height 6cm 
#+RESULTS:
[[file:./mtcars_ggplot2.pdf]]
#+END_CENTER
*** ggplot2: Illustration (3)
\small
#+BEGIN_SRC R :results output graphics :file ./mtcars_ggplot3.pdf :width 5.5 :height 4 :exports  both :session
ggplot(data = mtcars, aes(x=wt, y=qsec, color=factor(cyl),
       shape = factor(gear))) +  geom_point() + theme_bw() +
       geom_smooth(method="lm");
#+END_SRC

#+BEGIN_CENTER
#+ATTR_LaTeX: :height 6cm 
#+RESULTS:
[[file:./mtcars_ggplot3.pdf]]
#+END_CENTER
*** ggplot2: Illustration (4)
\small
#+BEGIN_SRC R :results output graphics :file ./mtcars_ggplot4.pdf :width 6 :height 4 :exports  both :session
ggplot(data = mtcars, aes(x=wt, y=qsec, color=factor(cyl),
       shape = factor(gear))) + geom_point() + theme_bw() +
       geom_smooth(method="lm") + facet_wrap(~ cyl);
#+END_SRC

#+BEGIN_CENTER
#+ATTR_LaTeX: :height 6cm 
#+RESULTS:
[[file:./mtcars_ggplot4.pdf]]
#+END_CENTER
*** ggplot2: Illustration (5)
\small
#+BEGIN_SRC R :results output graphics :file ./mtcars_ggplot5.pdf :width 6 :height 4 :exports  both :session
ggplot(data = movies, aes(x=factor(year),y=rating)) + 
       geom_boxplot() + facet_wrap(~Romance)
#+END_SRC

#+BEGIN_CENTER
#+ATTR_LaTeX: :height 6cm 
#+RESULTS:
[[file:./mtcars_ggplot5.pdf]]
#+END_CENTER
*** ggplot2: Illustration (6)
\small
#+BEGIN_SRC R :results output graphics :file ./mtcars_ggplot6.pdf :width 6 :height 4 :exports  both :session
ggplot(movies, aes(x = rating)) + geom_histogram(binwidth = 0.5)+
       facet_grid(Action ~ Comedy) + theme_bw();
#+END_SRC

#+BEGIN_CENTER
#+ATTR_LaTeX: :height 6cm 
#+RESULTS:
[[file:./mtcars_ggplot6.pdf]]
#+END_CENTER
*** Take away Message
- R is a great tool but is only a tool. There is no magic. You
  need to understand what you are doing and get a *minimal
  training in statistics*
- It is one of the building block of *reproducible research* (the
  /reproducible analysis/ block) and *will save you a lot of time*
- Read at least Jain's book: *The Art of Computer Systems Performance
  Analysis*
- Jean-Marc Vincent and myself give a *set of tutorials on performance
  evaluation* to M2R (links provided at the end of these slides)
- There are introductory *online courses* on coursera (links provided
  at the end of these slides)
* Setting up a Laboratory Notebook
** Emacs Demo of How to Keep Things Tidy
*** A few links to learn more (before I forget...)
**** Emacs/Org-mode
- /[[http://orgmode.org/worg/org-tutorials/org4beginners.html][Org for beginners]]/ (worg)
- /[[http://mescal.imag.fr/membres/arnaud.legrand/misc/init.org][My emacs configuration]]/
- /[[http://mescal.imag.fr/membres/arnaud.legrand/blog/2014/05/15/emacs_and_orgmode_on_macosx.php][For Mac OS X users]]/
- /[[http://mescal.imag.fr/membres/arnaud.legrand/blog/2014/05/22/syncfree_reproducible_research.phpc][These slides and the VM images]]/ I prepared with Kameleon
**** Performance Evaluation Lectures
- Jean-Marc Vincent and myself give a *set of tutorials on performance
  evaluation* to M2R
  - /[[http://mescal.imag.fr/membres/arnaud.legrand/teaching/2013/M2R_EP.php][2013 edition]]/ (confidence intervals, linear regression, DoE)
  - /[[http://mescal.imag.fr/membres/arnaud.legrand/teaching/2011/M2R_EP.php][2011 edition]]/ (visualization, measurement, checklists)
- There are interesting *online courses* on coursera (101s)
  By Roger D. Peng
  + /[[https://www.coursera.org/course/compdata/][Computing For Data Analysis]]/ (R)
  + /[[https://www.coursera.org/course/repdata/][Reproducible Research]]/ (actually reproducible data analysis)
  + /[[https://www.coursera.org/course/exdata][Exploratory Data Analysis]]/ (ggplot2 + lattice)
*** Literate Programming on a Daily Basis
**** Mastering Emacs
- =C-g=: get me out of here!
- =C-_=: undo
- Activate CUA keys in the Options menu
**** Mastering Org-mode
- =Tab= will fold/unfold stuff
- =C-c C-c=: do something (context-sensitive) where you are
- =<s= + =Tab=, =<b=, =<l=, =<r=, =<h=, ... for *creating code blocks*
- =C-c C-e=: *export*
- =C-c c=: *capture content*
- =C-c C-o= / =C-c l= / =C-c C-l=: open/store/insert *links*
- =C-c C-a=: *attach* a file
- =C-c C-d=: set deadline, =C-c C-t=: TODO/DONE
