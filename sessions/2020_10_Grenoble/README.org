#+TITLE:     Scientific Methodology and Performance Evaluation for Computer Scientists
#+AUTHOR:    Cyril LabbÃ©, Arnaud Legrand, and Jean-Marc Vincent
#+DATE: October 2020
#+STARTUP: overview indent

#+BEGIN_QUOTE
*Reporting errors*: Although I do my best there may definitely be typos
and broken links. This is github so please report me everything you
find so that I can improve for others. :)
#+END_QUOTE

This webpage gathers information about the lectures given at the
University of Grenoble to the Master students in Computer
Science (MOSIG) from October 2020 to January 2021.

* Useful links 
- Here is the [[http://pads.univ-grenoble-alpes.fr/p/MOSIG-SMPE-2021][Pad]] you will use to collaborate.
- Here is the [[https://edt.grenoble-inp.fr/2020-2021/exterieur/][lecture schedule on ADE]] (look for "scientific
  method"). A table summary is [[https://edt.grenoble-inp.fr/2020-2021/exterieur/jsp/custom/modules/plannings/eventInfo.jsp?week=-1&day=-1&slot=0&eventId=34649&activityId=-1&resourceId=-1&sessionId=-1&repetition=-1&order=slot&availableZone=-1][here]].
Links to the slides are provided below.
* Course Objective and Organization
The aim of this course is to provide the fundamental basis for sound
scientific methodology of performance evaluation of computer
systems. This lecture emphasize on methodological aspects of
measurement and on the statistics needed to analyze computer systems.
I first sensibilize the audience to the experiment and analysis
reproducibility issue in particular in computer science. Then I
present tools that help answering the analysis problem and may also
reveal useful for managing the experimental process through
notebooks. The audience is given the basis of probabilities and
statistics required to develop sound experiment designs. Unlike some
other lectures, my goal is not to provide analysis recipes that people
can readily apply but to make people really understand some simple
tools so that they can then dig deeper later on.

The lecture will be based on the following set of slides, which we will
probably adapt to the audience on the fly.
1. [[file:../../lectures/lecture_epistemology.pdf][Epistomology]]
2. [[file:../../lectures/lecture_reproducible_research.pdf][Reproducible research]]
3. [[file:../../lectures/lecture_literate_programming.pdf][Literate programming]] (Probably not as it will be explained in the
   "Reproducible research" slides)
4. [[file:../../lectures/lecture_R_crash_course.pdf][R crash course]] (Probably a live demo)
   - You may want to look at the [[*Learning R][Learning R]] section of this document
     or (probably better) follow this short series of tutorials from
     software carpentry which are quite pedagogical:
     - [[http://swcarpentry.github.io/r-novice-gapminder/01-rstudio-intro/][Introduction to R and Rstudio]]
     - [[http://swcarpentry.github.io/r-novice-gapminder/09-vectorization/][Vectorization]]
     - [[http://swcarpentry.github.io/r-novice-gapminder/06-data-subsetting/][Subsetting data]]
     - [[http://swcarpentry.github.io/r-novice-gapminder/04-data-structures-part1/][R data structures 1]], [[http://swcarpentry.github.io/r-novice-gapminder/05-data-structures-part2/][Data structures 2 (data frames)]], although
       I will not go into as much detail as this tutorial in my crash
       course.
     - [[http://swcarpentry.github.io/r-novice-gapminder/08-plot-ggplot2/][Beautiful graphics with ggplot2]].
   - For additional information, have a look at the "Using R" section
     below.
5. [[file:../../lectures/lecture_descriptive_univariate.pdf][Descriptive statistics of univariate data]] (Probably not as it will
   be evoked in the "Introduction to probabilities/statistics" slides
6. [[file:../../lectures/lecture_data_presentation.pdf][Data presentation]] (if time allows since it will be mentioned in the
   R crash course and in the "introduction to probabilities/statistics")
7. [[file:../../lectures/lecture_correlation_causation.pdf][Correlation and causation]] (Probably not as it will be evoked in the
   "Introduction to probabilities/statistics" slides)
8. [[file:../../lectures/3_introduction_to_statistics.pdf][Introduction to probabilities/statistics]] (if needed, [[file:../../lectures/lecture_central_limit_theorem.pdf][Proof of the
   Central limit theorem]] and [[file:../../lectures/lecture_chi_square.pdf][Unveiling the mysterious chi square
   test]]).
9. [[file:../../lectures/4_linear_model.pdf][Linear regression]]
10. [[file:../../lectures/5_design_of_experiments.pdf][Design of Experiments]]

All the examples given in this series of lecture use the [[http://www.r-project.org/][R]] language
and the source is provided so that people can reuse them. The slides
are composed with [[http://orgmode.org][org-mode]], beamer, and verbments.
* Course Tentative Schedule
1. 2020/10/01 @ 15:30: [JM] [[file:~/Work/Documents/Enseignements/SMPE/lectures/3_introduction_to_statistics.pdf][Probability basics: CLT + confidence
   interval]]
   - TODO: [[https://learninglab.inria.fr/en/mooc-recherche-reproductible-principes-methodologiques-pour-une-science-transparente/][MOOC: RR / Litterate Programming]] (module 1 + 2, except the
     Challenger exercise)
2. 2020/10/15 @ 15:30: [AL] MOOC debriefing + [[file:~/Work/Documents/Enseignements/SMPE/lectures/4_linear_model.pdf][Linear regression]]
   (continuous) 
   - TODO: [[https://learninglab.inria.fr/en/mooc-recherche-reproductible-principes-methodologiques-pour-une-science-transparente/][MOOC: RR / Litterate Programming]] (Challenger exercise +
     module 3 videos)
3. 2020/10/22 @ 15:30: [JM] Statistics: data curation, hypothesis,
   decision and test ([[file:../../lectures/lecture_chi_square.pdf][Unveiling the mysterious chi square test]]),
   "comparing" distribution
   - TODO: Catch up with R
   - TODO: "Analysis" of a given dataset (first names)
4. 2020/11/05 @ 15:30: [AL] Introduction to the tidyverse (ggplot + data
   wrangling)
   - TODO: criticizing/analyzing a graph
5. 2020/11/12 @ 15:30: [JM] Visualizing data, Exploratory Data
   Analysis, [[file:JMV_Intro-Visu.pdf][Critical thinking about visualizations]]
   - TODO: MOOC: peer evaluated exercise
6. 2020/11/19 @ 15:30: [AL] Analysis Of Variance, [[file:~/Work/Documents/Enseignements/SMPE/lectures/lecture_correlation_causation.pdf][Causality]], Linear
   regression
   - TODO: MOOC: complete peer evaluated exercise
7. 2020/11/26 @ 15:30: [AL] [[file:~/Work/Documents/Enseignements/SMPE/lectures/5_design_of_experiments.pdf][Design of Experiments]]
   - TODO: MOOC: evaluate peer exercise
8. 2020/12/03 @ 15:30: [AL] Q&A
9. 2020/12/10 @ 15:30: [AL] [[file:~/Work/Documents/Enseignements/SMPE/lectures/lecture_epistemology.pdf][Epistemology]]
10. 2020/12/17 @ 15:30: [CL] Publishing and Ethics
11. 2021/01/07 @ 15:30: [JM] Q&A
12. 2021/01/14 @ 15:30: [AL] Feedback on homework
* Hands-on
In the 3rd module of the [[https://www.fun-mooc.fr/courses/course-v1:inria+41016+session01bis/about][MOOC on Reproducible Research]], there is a
peer-reviewed homework that will allow you to practically use
everything you learnt. 
* Feedback on your hand-on
* Requirements 
All the examples given in this series of lecture use the [[http://www.r-project.org/][R]] language
and the source is provided so that people can reuse them. The slides
are composed with [[http://orgmode.org][org-mode]], beamer, and verbments.

It is not expected that students already knows the R language as I
will briefly present it. However, they should have already installed
Rstudio and R (check the next section if you need information) on
their laptop so as to try out the examples I provide for themselves.

Alternatively, you may use python with Jupyter. Most R verbs have now
their python counterpart (e.g., =numpy= and =pandas= for vectors and
dataframes, =plotnine= for =ggplot2=, =statsmodels= for linear regressions,
...).
* Using R
** Installing R and Rstudio
Here is how to proceed on debian-based distributions:
#+BEGIN_SRC sh
sudo apt-get install r-base r-cran-ggplot2 r-cran-reshape r-cran-knitr r-cran-magrittr
#+END_SRC
Make sure you have a recent (>= 3.2.0) version or R. For example, here
is what I have on my machine:
#+begin_src sh :results output :exports both
R --version
#+end_src

#+RESULTS:
#+begin_example
R version 3.5.1 (2018-07-02) -- "Feather Spray"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under the terms of the
GNU General Public License versions 2 or 3.
For more information about these matters see
http://www.gnu.org/licenses/.

#+end_example

Rstudio and knitr are unfortunately not packaged within debian so the
easiest is to download the corresponding debian package on the [[http://www.rstudio.com/ide/download/desktop][Rstudio
webpage]] and then to install it manually (depending on when you do this
and on the version of your OS, *you should obviously change the version
number*).

#+BEGIN_SRC sh
wget https://download1.rstudio.org/rstudio-xenial-1.1.456-amd64.deb
sudo dpkg -i rstudio-xenial-1.1.456-amd64.deb
sudo apt-get -f install # to fix possibly missing dependencies
#+END_SRC
You will also need to install knitr. To this end, you should simply
run R (or Rstudio) and use the following command.
#+BEGIN_SRC R
install.packages("knitr")
#+END_SRC
If =r-cran-ggplot2= or =r-cran-reshape= could not be installed for some
reason, you can also install it through R by doing:
#+BEGIN_SRC R
install.packages("ggplot2")
install.packages("reshape")
#+END_SRC
** Producing documents
The easiest way to go is probably to [[http://www.rstudio.com/ide/docs/authoring/using_markdown][use R+Markdown (Rmd files) in
Rstudio]] and to export them via [[http://www.rpubs.com/][Rpubs]] to make available [[http://www.rpubs.com/tucano/zombies][whatever you
want]].

We can roughly distinguish between three kinds of documents:
1. Lab notebook (with everything you try and that is meant mainly
   for yourself)
2. Experimental report (selected results and explanations with
   enough details to discuss with your advisor)
3. Result description (rather short with only the main point and,
   which could be embedded in an article)
We expect you to provide us the last two ones and to make them
publicly available so as to allow others to [[http://rpubs.com/RobinLovelace/ratmog11][comment]] on them.
** Learning R
For a quick start, you may want to look at [[http://cran.r-project.org/doc/contrib/Paradis-rdebuts_en.pdf][R for Beginners]]. A probably
more entertaining way to go is to follow a good online lecture
providing an introduction to R and to data analysis such as this one:
https://www.coursera.org/course/compdata. 

A quite effective way (if you have time) is to use [[http://swirlstats.com/students.html][SWIRL]], an
interactive learning environment that will guide through self-paced
lesson.
#+begin_src R :results output :session :exports both
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
#+end_src
I suggest in particular to follow the following lessons from R
programming (max 10 minutes each):
#+BEGIN_EXAMPLE
 1: Basic Building Blocks      2: Workspace and Files     
 3: Sequences of Numbers       4: Vectors                 
 5: Missing Values             6: Subsetting Vectors      
 7: Matrices and Data Frames   8: Logic                   
 9: Functions                 12: Looking at Data         
#+END_EXAMPLE

Finally, you may want to read this [[http://ww2.coastal.edu/kingw/statistics/R-tutorials/dataframes.html][excellent tutorial on data frames]]
(=attach=, =with=, =rownames=, =dimnames=, notions of scope...).
** Learning the tidyverse (ggplot2, plyr/dplyr, reshape/tidyR)
All these packages have been developed by hadley wickam.

# https://seananderson.ca/ggplot2-fish554/
* References
+ R. Jain, [[http://www.cs.wustl.edu/~jain/books/perfbook.htm][The Art of Computer Systems Performance Analysis:
  Techniques for Experimental Design, Measurement, Simulation, and
  Modeling]], Wiley-Interscience, New York, NY, April 1991.
  [[http://www.amazon.com/Art-Computer-Systems-Performance-Analysis/dp/1118858425/ref%3Dsr_1_2?s%3Dbooks&ie%3DUTF8&qid%3D1435137636&sr%3D1-2&keywords%3Dperformance%2Bmeasurement%2Bcomputer][A new edition will be available in September 2015]].
  #+BEGIN_QUOTE
  This is an easy-to-read self-content book for practical performance
  evaluation. The numerous checklists make it a great book for
  engineers and every CS experimental scientist should have read it.
  #+END_QUOTE
+ David J. Lilja, Measuring Computer Performance: A Practitionerâs
  Guide, Cambridge University Press 2005
  #+BEGIN_QUOTE
  A short book suited for brief presentations. I follow a similar
  organization but I really don't like the content of this book. I
  feel it provides very little insight on why the theory applies or
  not. I also think it is too general and lacks practical examples. It
  may be interesting for those willing a quick and broad presentation
  of the main concepts and "recipes" to apply.
  #+END_QUOTE
+ Jean-Yves Le Boudec. [[http://www.cl.cam.ac.uk/~dq209/others/perf.pdf][Methods, practice and theory for the
  performance evaluation of computer and communication
  systems, 2006. EPFL electronic book]].
  #+BEGIN_QUOTE
  A very good book, with a much more theoretical treatment than the
  Jain. It goes way farther on many aspects and I can only recommand
  it.
  #+END_QUOTE
+ Douglas C. Montgomery, [[http://www.wiley.com/WileyCDA/WileyTitle/productCd-EHEP002024.html][Design and Analysis of Experiments]], 8th
  Edition. Wiley 2013.
  #+BEGIN_QUOTE
  This is a good and thorough textbook on design of experiments. It's
  so unfortunate it relies on "exotic" softwares like JMP and minitab
  instead of R...
  #+END_QUOTE
+ Julian J. Faraway, [[https://cran.r-project.org/doc/contrib/Faraway-PRA.pdf][Practical Regression and Anova using R]],
  University of Bath, 2002.
  #+BEGIN_QUOTE
  This book is derived from material that Pr. Faraway used in a Master
  level class on Statistics at the University of Michigan. It is
  mathematically involved but presents in details how linear
  regression, ANOVA work and can be done with R. It works out many
  examples in details and is very pleasant to read. A must-read if you
  want to understand this topic more thoroughly.
  #+END_QUOTE
+ Peter Kosso, [[http://www.amazon.fr/Summary-Scientific-Method-Peter-Kosso-ebook/dp/B008D5IYU2][A Summary of Scientific Method]], Springer, 2011. [[[http://hemija.pmf.ukim.edu.mk/materials/download/6d31fd3f53a82da9de163833806722ae][hidden
  PDF that google found on the webpage of a university in Macedonia]]
  #+BEGIN_QUOTE
  A short nice book summarizing the main steps of the scientific
  method and why having a clear definition is not that simple. It
  illustrates these points with several nice historical examples that
  allow the reader to take some perspective on this epistemological
  question.
  #+END_QUOTE
+ R. Nelson, Probability stochastic processes and queuing theory: the
  mathematics of computer performance modeling. Springer Verlag 1995.
  #+BEGIN_QUOTE
  For those willing to know more about queuing theory.
  #+END_QUOTE
