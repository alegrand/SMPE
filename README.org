#+TITLE:     Scientific Methodology and Performance Evaluation for Computer Scientists
#+AUTHOR:    Arnaud Legrand
#+DATE: August 2015
#+STARTUP: overview indent

[[http://creativecommons.org/licenses/by/4.0/][https://img.shields.io/badge/License-CC%20BY%204.0-lightgrey.svg]]

#+BEGIN_QUOTE
*Reporting errors*: Although I do my best there may definitely be typos
and broken links. This is github so please report me anything you
find so that I can improve for others. :)
#+END_QUOTE

This website gather the series of lectures on applied performance
evaluation avalaible that I was invited to give in various
occasions. I have given this course with Jean-Marc Vincent several
years (roughly from 2011 to 2015) in the second year of the [[http://mosig.imag.fr/][Master of
Science in Informatics at Grenoble]] and more recently at [[http://www.ufrgs.br/][Federal
University of Rio Grande do Sul]], at [[http://www.ens-lyon.fr][ENS Lyon]] and [[http://ens-rennes.fr][ENS Rennes]]. Most sessions I gave are listed [[file:sessions/][here]].

#+begin_center
*If you are a MOSIG student, the webpage for your session is [[file:sessions/2024_10_Grenoble/README.org][here]]*.
#+end_center

This website also gathers a list of keynotes I gave on reproducible
research. The most recent ones are:
#+begin_src shell :results output raw :exports results
for i in `ls lectures/talk*.pdf | sort -r | head -n 9`;  do
    date=`echo $i | sed 's/.*talk_//'`;
    place=$date;
    date=`echo $date | sed 's/_[^0-9].*//g'`;
    date=`echo $date | sed 's|\([0-9]*\)_\([0-9]*\)_\([0-9]*\)|\3/\2/20\1|g'`;
    place=`echo $place | sed -e s/[0-9_]*// -e 's/.pdf//'`;
    echo - [[file:$i][$place \($date\)]];
done
#+end_src

#+RESULTS:
- [[file:lectures/talk_24_12_11_M1_UGA.pdf][M1_UGA (11/12/2024)]]
- [[file:lectures/talk_24_11_27_theory_days.pdf][theory_days (27/11/2024)]]
- [[file:lectures/talk_24_03_27_Journees_reseau_recherche_reproductible_table_ronde_IA.pdf][Journees_reseau_recherche_reproductible_table_ronde_IA (27/03/2024)]]
- [[file:lectures/talk_24_03_15_ORAP_2.pdf][ORAP_2 (15/03/2024)]]
- [[file:lectures/talk_24_03_15_ORAP_1.pdf][ORAP_1 (15/03/2024)]]
- [[file:lectures/talk_24_02_07_RSD_School_Pleynet.pdf][RSD_School_Pleynet (07/02/2024)]]
- [[file:lectures/talk_24_01_24_L3_ENSL.pdf][L3_ENSL (24/01/2024)]]
- [[file:lectures/talk_23_12_14_M1_UGA.pdf][M1_UGA (14/12/2023)]]
- [[file:lectures/talk_23_10_18_Bordeaux_Neurocampus.pdf][Bordeaux_Neurocampus (18/10/2023)]]

* Table of Contents                                                     :TOC:
- [[#course-objective-and-organization][Course Objective and Organization]]
- [[#using-r][Using R]]
  - [[#installing-r-and-rstudio][Installing R and Rstudio]]
  - [[#producing-documents][Producing documents]]
  - [[#learning-r][Learning R]]
  - [[#learning-ggplot2-plyrdplyr-reshapetidyr][Learning ggplot2, plyr/dplyr, reshape/tidyR]]
- [[#references][References]]

* Course Objective and Organization
The aim of this course is to provide the fundamental basis for sound
scientific methodology of performance evaluation of computer
systems. This lecture emphasize on methodological aspects of
measurement and on the statistics needed to analyze computer systems.
I first sensibilize the audience to the experiment and analysis
reproducibility issue in particular in computer science. Then I
present tools that help answering the analysis problem and may also
reveal useful for managing the experimental process through
notebooks. The audience is given the basis of probabilities and
statistics required to develop sound experiment designs. Unlike some
other lectures, my goal is not to provide analysis recipes that people
can readily apply but to make people really understand some simple
tools so that they can then dig deeper later on.


Originally, the course is organized in 5 very dense lectures of 3
hours:
  1. *[[file:lectures/1_reproducible_research.pdf][Reproducible research]]*. A video of a similar presentation (a
     mixture of lecture 1 and 2 actually) is available on [[https://www.canal-u.tv/][canal-u]]
     ([[https://www.canal-u.tv/video/inria/best_practices_for_reproducible_research_part_1.16684][Part 1]] and [[https://www.canal-u.tv/video/inria/best_practices_for_reproducible_research_part_2.16685][Part 2]]) and graal ([[http://graal.ens-lyon.fr/~alegrand/PUF_JLPC_Summer_School/1st%20PUF:JLPC%20Summer%20School%20-%20Best%20Practices%20for%20Reproducible%20Research%20-%20Arnaud%20Legrand.mp4][Part 1]] and [[http://graal.ens-lyon.fr/~alegrand/PUF_JLPC_Summer_School/1st%20PUF:JLPC%20Summer%20School%20-%20Best%20Practices%20for%20Reproducible%20Research%20-%20Arnaud%20Legrand%20-%20partie%202%20-%20demo.mp4][Part 2]]).
  2. *[[file:lectures/2_data_presentation.pdf][Data visualization/presentation]]*.
  3. *[[file:lectures/3_introduction_to_statistics.pdf][Introduction to probabilities/statistics]]*.
  4. *[[file:lectures/4_linear_model.pdf][Linear regression]]*.
  5. *[[file:lectures/5_design_of_experiments.pdf][Design of Experiments]]*.

I'm progressively slicing it up in smaller chunks as follows:
1. [[file:lectures/lecture_epistemology.pdf][Epistomology]]
2. [[file:lectures/lecture_reproducible_research.pdf][Reproducible research]]
3. [[file:lectures/lecture_literate_programming.pdf][Literate programming]]
4. [[file:lectures/lecture_R_crash_course.pdf][R crash course]]
5. [[file:lectures/lecture_descriptive_univariate.pdf][Descriptive statistics of univariate data]]
6. [[file:lectures/lecture_data_presentation.pdf][Data presentation]] (checklist for good graphics: [[file:lectures/Check-list-good-graphics-tableau-en.pdf][tableau]], [[file:lectures/Check-list-good-graphics-en.pdf][guidelines]])
7. [[file:lectures/lecture_correlation_causation.pdf][Correlation and causation]]
8. [[file:lectures/3_introduction_to_statistics.pdf][Introduction to probabilities/statistics]] ([[file:lectures/lecture_central_limit_theorem.pdf][Proof of the Central
   limit theorem]], [[file:lectures/lecture_chi_square.pdf][a few slides on the $\chi^2$ test]])
9. [[file:lectures/4_linear_model.pdf][Linear regression]]
10. [[file:lectures/5_design_of_experiments.pdf][Design of Experiments]]

All the examples given in this series of lecture use the [[http://www.r-project.org/][R]] language
and the source is provided so that people can reuse them. The slides
are composed with [[http://orgmode.org][org-mode]], beamer, and verbments.

As an exercise, I often propose the audience to work in small groups
and to provide me with a clean and reproducible analysis of a simple
scientific question of their choice. Alternatively, they can fork this
small [[https://github.com/alegrand/M2R-ParallelQuicksort][project]] which is toy experiment regarding measuring the
performance of a simple parallel quicksort implementation:
#+BEGIN_QUOTE
  One of your colleague just implemented a multi-threaded version of
  the quicksort algorithm for multi-core machines. He's convinced his
  code can save significant time saving but unfortunately, he did not
  follow the performance evaluation lecture and he would like your
  help to promote his code.
#+END_QUOTE
Students should fork it, play with it and possibly improve (it's not
hard as the stub is purposely basic) and then send me with their git
URL so that I can comment on it.

In practice, I introduce the audience to the following tools:
- [[http://www.r-project.org/][R]] and [[http://ggplot2.org/][ggplot2]] that provide a standard, efficient and flexible data
  management and graph generation mechanism. Although R is quite
  cumbersome at first for computer scientists, it quickly reveals an
  incredible asset compared to spreadsheets, =gnuplot= or graphical
  libraries like =matplotlib= or =tikz=.
- [[http://yihui.name/knitr/][knitR]] is a tool that enables to integrate R commands within a LaTeX
  or a Markdown document. It allows to fully automatize data
  post-processing/analysis and figure generation down to their
  integration to a report. Beyond the gain in term of ease of
  generation, page layout, uniformity insurance, such integration
  allows anyone to easily check what has been done during the analysis
  and possibly to improve graphs or analysis.
- I explain how to use these tools with [[http://www.rstudio.com/][Rstudio]], which is a
  multi-platform and easy-to-use IDE for R. For example, using
  [[http://www.rstudio.com/ide/docs/authoring/using_markdown][R+Markdown (Rmd files) in Rstudio]], it is extremely easy to export
  the output result to [[http://www.rpubs.com/][Rpubs]] and hence make [[http://www.rpubs.com/tucano/zombies][the result of your
  research available]] to others in no more than two clicks.
- I also mention other alternatives such as [[http://orgmode.org/worg/org-contrib/babel/][org-mode and babel]] or the
  [[http://ipython.org/notebook.html][ipython notebook]] that allow a day-to-day practice of reproducible
  research in a somehow more fluent way than knitR but I am probably
  not fully objective here. :)
- I present the basis of probabilities and statistics and explain how
  to compute confidence intervals and to perform linear regressions
  and analysis of variance with R. 
- I give an overview of the main classes of experiment designs and I
  explain how to easily generate and analyze them using
  [[http://www.stats.bris.ac.uk/R/web/packages/RcmdrPlugin.DoE/index.html][RcmdrPlugin.DoE]] from the [[http://www.rcommander.com/][Rcommander]] GUI.
* Using R
** Installing R and Rstudio
Here is how to proceed on debian-based distributions:
#+BEGIN_SRC sh
sudo apt-get install r-base r-cran-ggplot2 r-cran-reshape 
#+END_SRC
Make sure you have a recent (>= 3.2.0) version or R. For example, here
is what I have on my machine:
#+begin_src sh :results output :exports both
R --version
#+end_src

#+RESULTS:
#+begin_example
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under the terms of the
GNU General Public License versions 2 or 3.
For more information about these matters see
http://www.gnu.org/licenses/.
#+end_example

Rstudio and knitr are unfortunately not packaged within debian so the
easiest is to download the corresponding debian package on the [[http://www.rstudio.com/ide/download/desktop][Rstudio
webpage]] and then to install it manually (depending on when you do
this, you can obviously change the version number).

#+BEGIN_SRC sh
wget http://download1.rstudio.org/rstudio-0.99.484-amd64.deb
sudo dpkg -i rstudio-0.99.484-amd64.deb
sudo apt-get -f install # to fix possibly missing dependencies
#+END_SRC
You will also need to install knitr. To this end, you should simply
run R (or Rstudio) and use the following command.
#+BEGIN_SRC R
install.packages("knitr")
#+END_SRC
If =r-cran-ggplot2= or =r-cran-reshape= could not be installed for some
reason, you can also install it through R by doing:
#+BEGIN_SRC R
install.packages("ggplot2")
install.packages("reshape")
#+END_SRC
** Producing documents
The easiest way to go is probably to [[http://www.rstudio.com/ide/docs/authoring/using_markdown][use R+Markdown (Rmd files) in
Rstudio]] and to export them via [[http://www.rpubs.com/][Rpubs]] to make available [[http://www.rpubs.com/tucano/zombies][whatever you
want]].

We can roughly distinguish between three kinds of documents:
1. Lab notebook (with everything you try and that is meant mainly
   for yourself)
2. Experimental report (selected results and explanations with
   enough details to discuss with your advisor)
3. Result description (rather short with only the main point and,
   which could be embedded in an article)
We expect you to provide us the last two ones and to make them
publicly available so as to allow others to [[http://rpubs.com/RobinLovelace/ratmog11][comment]] on them.
** Learning R
For a quick start, you may want to look at [[http://cran.r-project.org/doc/contrib/Paradis-rdebuts_en.pdf][R for Beginners]]. A probably
more entertaining way to go is to follow a good online lecture
providing an introduction to R and to data analysis such as this one:
https://www.coursera.org/course/compdata. 

A quite effective way is to use [[http://swirlstats.com/students.html][SWIRL]], an interactive learning
environment that will guide through self-paced lesson.
#+begin_src R :results output :session :exports both
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
#+end_src
I suggest in particular to follow the following lessons from R
programming (max 10 minutes each):
#+BEGIN_EXAMPLE
 1: Basic Building Blocks      2: Workspace and Files     
 3: Sequences of Numbers       4: Vectors                 
 5: Missing Values             6: Subsetting Vectors      
 7: Matrices and Data Frames   8: Logic                   
 9: Functions                 12: Looking at Data         
#+END_EXAMPLE

Finally, you may want to read this [[http://ww2.coastal.edu/kingw/statistics/R-tutorials/dataframes.html][excellent tutorial on data frames]]
(=attach=, =with=, =rownames=, =dimnames=, notions of scope...).
** Learning ggplot2, plyr/dplyr, reshape/tidyR
All these packages have been developed by hadley wickam.
- Although the package is called =ggplot2=, it provides you the =ggplot=
  command. This package allows you to produce nice looking and highly
  configurable graphics.
- Old generation: =plyr= allows you expressively compute aggregate
  statistics on your data-frames and =reshape= allows you to reshape
  your data-frames if they're not in the right shape for =ggplot2= or
  =plyr=.
- New generation: =dplyr= is the new generation of =plyr= and allows you
  to expressively compute aggregate statistics on your
  data-frames. =tidyr= is the new generation of =reshape= and allows you
  to reshape your data-frames if they're not in the right shape for
  =ggplot2= or =dplyr=. If you have a recent R installation, go for these
  new packages. Their syntax is better and their implementation is
  much faster.

I recently stumbled on this [[http://seananderson.ca/ggplot2-FISH554/][nice ggplot2 tutorial]].

Hadley Wickam provides a [[https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html][nice tour of dplyr]] and [[http://blog.rstudio.org/2014/07/22/introducing-tidyr/][gentle introduction to
tidyR]]. Here is a nice link on [[https://stat545-ubc.github.io/bit001_dplyr-cheatsheet.html][merging data frames]].

The Rstudio team has designed a [[https://www.rstudio.com/resources/cheatsheets/][nice series of cheatsheets on R]] and in
particular one on [[https://www.rstudio.com/wp-content/uploads/2015/05/ggplot2-cheatsheet.pdf][ggplot2]] and on [[https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf][R/markdown/knitr]].
* References
+ R. Jain, [[http://www.cs.wustl.edu/~jain/books/perfbook.htm][The Art of Computer Systems Performance Analysis:
  Techniques for Experimental Design, Measurement, Simulation, and
  Modeling]], Wiley-Interscience, New York, NY, April 1991.
  [[http://www.amazon.com/Art-Computer-Systems-Performance-Analysis/dp/1118858425/ref%3Dsr_1_2?s%3Dbooks&ie%3DUTF8&qid%3D1435137636&sr%3D1-2&keywords%3Dperformance%2Bmeasurement%2Bcomputer][A new edition will be available in September 2015]].
  #+BEGIN_QUOTE
  This is an easy-to-read self-content book for practical performance
  evaluation. The numerous checklists make it a great book for
  engineers and every CS experimental scientist should have read it.
  #+END_QUOTE
+ David J. Lilja, Measuring Computer Performance: A Practitioner’s
  Guide, Cambridge University Press 2005
  #+BEGIN_QUOTE
  A short book suited for brief presentations. I follow a similar
  organization but I really don't like the content of this book. I
  feel it provides very little insight on why the theory applies or
  not. I also think it is too general and lacks practical examples. It
  may be interesting for those willing a quick and broad presentation
  of the main concepts and "recipes" to apply.
  #+END_QUOTE
+ Jean-Yves Le Boudec. [[http://www.cl.cam.ac.uk/~dq209/others/perf.pdf][Methods, practice and theory for the
  performance evaluation of computer and communication
  systems, 2006. EPFL electronic book]].
  #+BEGIN_QUOTE
  A very good book, with a much more theoretical treatment than the
  Jain. It goes way farther on many aspects and I can only recommand
  it.
  #+END_QUOTE
+ Douglas C. Montgomery, [[http://www.wiley.com/WileyCDA/WileyTitle/productCd-EHEP002024.html][Design and Analysis of Experiments]], 8th
  Edition. Wiley 2013.
  #+BEGIN_QUOTE
  This is a good and thorough textbook on design of experiments. It's
  so unfortunate it relies on "exotic" softwares like JMP and minitab
  instead of R...
  #+END_QUOTE
+ Julian J. Faraway, [[https://cran.r-project.org/doc/contrib/Faraway-PRA.pdf][Practical Regression and Anova using R]],
  University of Bath, 2002.
  #+BEGIN_QUOTE
  This book is derived from material that Pr. Faraway used in a Master
  level class on Statistics at the University of Michigan. It is
  mathematically involved but presents in details how linear
  regression, ANOVA work and can be done with R. It works out many
  examples in details and is very pleasant to read. A must-read if you
  want to understand this topic more thoroughly.
  #+END_QUOTE
+ Peter Kosso, [[http://www.amazon.fr/Summary-Scientific-Method-Peter-Kosso-ebook/dp/B008D5IYU2][A Summary of Scientific Method]], Springer, 2011. [[[http://hemija.pmf.ukim.edu.mk/materials/download/6d31fd3f53a82da9de163833806722ae][hidden
  PDF that google found on the webpage of a university in Macedonia]]
  #+BEGIN_QUOTE
  A short nice book summarizing the main steps of the scientific
  method and why having a clear definition is not that simple. It
  illustrates these points with several nice historical examples that
  allow the reader to take some perspective on this epistemological
  question.
  #+END_QUOTE
+ R. Nelson, Probability stochastic processes and queuing theory: the
  mathematics of computer performance modeling. Springer Verlag 1995.
  #+BEGIN_QUOTE
  For those willing to know more about queuing theory.
  #+END_QUOTE
